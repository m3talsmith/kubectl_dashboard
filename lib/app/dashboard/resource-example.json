{
  "kind": "PodList",
  "apiVersion": "v1",
  "metadata": {
    "resourceVersion": "29614329"
  },
  "items": [
    {
      "metadata": {
        "name": "cert-manager-965cbb44f-hp7z4",
        "generateName": "cert-manager-965cbb44f-",
        "namespace": "cert-manager",
        "uid": "ba0a57d8-1e33-4c44-8c21-b30a088adaf6",
        "resourceVersion": "28982050",
        "creationTimestamp": "2024-11-16T00:04:12Z",
        "labels": {
          "app": "cert-manager",
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/instance": "cert-manager",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "cert-manager",
          "app.kubernetes.io/version": "v1.13.3",
          "helm.sh/chart": "cert-manager-v1.13.3",
          "pod-template-hash": "965cbb44f"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "cert-manager-965cbb44f",
            "uid": "fcbd5cec-69ed-4e56-9636-e9e3e4f15cba",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:12Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"fcbd5cec-69ed-4e56-9636-e9e3e4f15cba\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"cert-manager-controller\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"POD_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":9402,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9403,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:runAsNonRoot": {},
                  "f:seccompProfile": {
                    ".": {},
                    "f:type": {}
                  }
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {}
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:27Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.1.73\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-api-access-z28z8",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "cert-manager-controller",
            "image": "quay.io/jetstack/cert-manager-controller:v1.13.3",
            "args": [
              "--v=2",
              "--cluster-resource-namespace=$(POD_NAMESPACE)",
              "--leader-election-namespace=kube-system",
              "--acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.13.3",
              "--max-concurrent-challenges=60"
            ],
            "ports": [
              {
                "name": "http-metrics",
                "containerPort": 9402,
                "protocol": "TCP"
              },
              {
                "name": "http-healthz",
                "containerPort": 9403,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "POD_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "kube-api-access-z28z8",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "cert-manager",
        "serviceAccount": "cert-manager",
        "nodeName": "mandible-prod-default-pool-grcwb",
        "securityContext": {
          "runAsNonRoot": true,
          "seccompProfile": {
            "type": "RuntimeDefault"
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": false,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:27Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:12Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:27Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:27Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:12Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.244.1.73",
        "podIPs": [
          {
            "ip": "10.244.1.73"
          }
        ],
        "startTime": "2024-11-16T00:04:12Z",
        "containerStatuses": [
          {
            "name": "cert-manager-controller",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:26Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/jetstack/cert-manager-controller:v1.13.3",
            "imageID": "quay.io/jetstack/cert-manager-controller@sha256:2121d4250f5734ee097df243507d06536fc264140dba3425045a825ef597c79d",
            "containerID": "containerd://175e204515753940dbbf20622333dc663feb3c5d058c6bde3b837d6739ef05e5",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "cert-manager-cainjector-6646674bc8-lbtmc",
        "generateName": "cert-manager-cainjector-6646674bc8-",
        "namespace": "cert-manager",
        "uid": "8fb6c7ad-a28f-4ca7-bd2d-48ac1db4c6fc",
        "resourceVersion": "28982026",
        "creationTimestamp": "2024-11-16T00:04:11Z",
        "labels": {
          "app": "cainjector",
          "app.kubernetes.io/component": "cainjector",
          "app.kubernetes.io/instance": "cert-manager",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "cainjector",
          "app.kubernetes.io/version": "v1.13.3",
          "helm.sh/chart": "cert-manager-v1.13.3",
          "pod-template-hash": "6646674bc8"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "cert-manager-cainjector-6646674bc8",
            "uid": "e3baeda8-6a23-4a18-9926-ba9ba730462e",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:11Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"e3baeda8-6a23-4a18-9926-ba9ba730462e\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"cert-manager-cainjector\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"POD_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:runAsNonRoot": {},
                  "f:seccompProfile": {
                    ".": {},
                    "f:type": {}
                  }
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {}
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:24Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.1.15\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-api-access-2kcft",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "cert-manager-cainjector",
            "image": "quay.io/jetstack/cert-manager-cainjector:v1.13.3",
            "args": [
              "--v=2",
              "--leader-election-namespace=kube-system"
            ],
            "env": [
              {
                "name": "POD_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "kube-api-access-2kcft",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "cert-manager-cainjector",
        "serviceAccount": "cert-manager-cainjector",
        "nodeName": "mandible-prod-default-pool-grcwb",
        "securityContext": {
          "runAsNonRoot": true,
          "seccompProfile": {
            "type": "RuntimeDefault"
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": false,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:24Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:11Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:24Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:24Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:11Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.244.1.15",
        "podIPs": [
          {
            "ip": "10.244.1.15"
          }
        ],
        "startTime": "2024-11-16T00:04:11Z",
        "containerStatuses": [
          {
            "name": "cert-manager-cainjector",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:23Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/jetstack/cert-manager-cainjector:v1.13.3",
            "imageID": "quay.io/jetstack/cert-manager-cainjector@sha256:ac5154525f99bd0872671613741aac1b7dcb9c0df988571a7618155ddb6fabd2",
            "containerID": "containerd://8ceca5b4967b19285ab85b0d51d844ea125a1924b1bca37c42ba42a4297602e9",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "cert-manager-webhook-785f6745d8-qnh5q",
        "generateName": "cert-manager-webhook-785f6745d8-",
        "namespace": "cert-manager",
        "uid": "fa94e397-84e6-4767-a4ec-afa1d43a0bd8",
        "resourceVersion": "28982076",
        "creationTimestamp": "2024-11-16T00:04:11Z",
        "labels": {
          "app": "webhook",
          "app.kubernetes.io/component": "webhook",
          "app.kubernetes.io/instance": "cert-manager",
          "app.kubernetes.io/managed-by": "Helm",
          "app.kubernetes.io/name": "webhook",
          "app.kubernetes.io/version": "v1.13.3",
          "helm.sh/chart": "cert-manager-v1.13.3",
          "pod-template-hash": "785f6745d8"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "cert-manager-webhook-785f6745d8",
            "uid": "39853371-f167-4529-bf87-7b6c778cd55b",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:11Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/managed-by": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/version": {},
                  "f:helm.sh/chart": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"39853371-f167-4529-bf87-7b6c778cd55b\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"cert-manager-webhook\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"POD_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":6080,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":10250,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:runAsNonRoot": {},
                  "f:seccompProfile": {
                    ".": {},
                    "f:type": {}
                  }
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {}
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:31Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.1.52\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-api-access-pcmbv",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "cert-manager-webhook",
            "image": "quay.io/jetstack/cert-manager-webhook:v1.13.3",
            "args": [
              "--v=2",
              "--secure-port=10250",
              "--dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)",
              "--dynamic-serving-ca-secret-name=cert-manager-webhook-ca",
              "--dynamic-serving-dns-names=cert-manager-webhook",
              "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)",
              "--dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc"
            ],
            "ports": [
              {
                "name": "https",
                "containerPort": 10250,
                "protocol": "TCP"
              },
              {
                "name": "healthcheck",
                "containerPort": 6080,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "POD_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "kube-api-access-pcmbv",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/livez",
                "port": 6080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 60,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 6080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 5,
              "timeoutSeconds": 1,
              "periodSeconds": 5,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "cert-manager-webhook",
        "serviceAccount": "cert-manager-webhook",
        "nodeName": "mandible-prod-default-pool-grcwb",
        "securityContext": {
          "runAsNonRoot": true,
          "seccompProfile": {
            "type": "RuntimeDefault"
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": false,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:23Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:11Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:31Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:31Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:11Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.244.1.52",
        "podIPs": [
          {
            "ip": "10.244.1.52"
          }
        ],
        "startTime": "2024-11-16T00:04:11Z",
        "containerStatuses": [
          {
            "name": "cert-manager-webhook",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:22Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "quay.io/jetstack/cert-manager-webhook:v1.13.3",
            "imageID": "quay.io/jetstack/cert-manager-webhook@sha256:f45b21f770bf4676c732f19e2ef17c34f46ac75873a5e0aa25703d808b2e5566",
            "containerID": "containerd://32b3c0a30bca506084327f58f6b5b5b6d120059ec028af842cb161ea4c097985",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "api-dcb849d69-vsvjl",
        "generateName": "api-dcb849d69-",
        "namespace": "default",
        "uid": "2c819506-83a0-498a-94c9-80200bda32eb",
        "resourceVersion": "28982224",
        "creationTimestamp": "2024-11-16T00:04:10Z",
        "labels": {
          "app": "api",
          "pod-template-hash": "dcb849d69"
        },
        "annotations": {
          "kubectl.kubernetes.io/restartedAt": "2024-11-05T16:54:55Z"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "api-dcb849d69",
            "uid": "69560d71-c8ad-4759-bcf2-7a7c8e9ee3a3",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:10Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/restartedAt": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"69560d71-c8ad-4759-bcf2-7a7c8e9ee3a3\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"api\"}": {
                    ".": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"DB_HOST\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"DB_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"DB_PASSWORD\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"DB_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"DB_USER\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"SENDGRID_KEY\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"SENDGRID_REGISTER_TEMPLATE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"SENDGRID_TESTER_TEMPLATE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:secretKeyRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/api\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"api\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:secretName": {}
                    }
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:56Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.1.4\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "api",
            "secret": {
              "secretName": "api",
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-rjb52",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "api",
            "image": "registry.digitalocean.com/mandible/api",
            "ports": [
              {
                "name": "http",
                "containerPort": 8080,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "SENDGRID_KEY",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "api",
                    "key": "sendgrid_key"
                  }
                }
              },
              {
                "name": "SENDGRID_TESTER_TEMPLATE",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "api",
                    "key": "sendgrid_tester_template"
                  }
                }
              },
              {
                "name": "SENDGRID_REGISTER_TEMPLATE",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "api",
                    "key": "sendgrid_register_template"
                  }
                }
              },
              {
                "name": "DB_HOST",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "api",
                    "key": "db_host"
                  }
                }
              },
              {
                "name": "DB_PORT",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "api",
                    "key": "db_port"
                  }
                }
              },
              {
                "name": "DB_USER",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "api",
                    "key": "db_user"
                  }
                }
              },
              {
                "name": "DB_PASSWORD",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "api",
                    "key": "db_password"
                  }
                }
              },
              {
                "name": "DB_NAME",
                "valueFrom": {
                  "secretKeyRef": {
                    "name": "api",
                    "key": "db_name"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "api",
                "readOnly": true,
                "mountPath": "/etc/api"
              },
              {
                "name": "kube-api-access-rjb52",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "Always"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "default",
        "serviceAccount": "default",
        "nodeName": "mandible-prod-default-pool-grcwb",
        "securityContext": {},
        "imagePullSecrets": [
          {
            "name": "registry-mandible"
          },
          {
            "name": "mandible"
          }
        ],
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:56Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:10Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:56Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:56Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:10Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.244.1.4",
        "podIPs": [
          {
            "ip": "10.244.1.4"
          }
        ],
        "startTime": "2024-11-16T00:04:10Z",
        "containerStatuses": [
          {
            "name": "api",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:56Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "registry.digitalocean.com/mandible/api:latest",
            "imageID": "registry.digitalocean.com/mandible/api@sha256:91d3e652d3266c84ed1bd2b8ab3e6bb58b000b49833cc24beb3fad54e8051f7d",
            "containerID": "containerd://ba3e6b447210631f39e13cfdfefb4b78f88d97725ab357bb7232d1bf53077b03",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "web-58b994b597-pxsvq",
        "generateName": "web-58b994b597-",
        "namespace": "default",
        "uid": "1a4a0a08-71fa-4dca-8a23-3343d7947656",
        "resourceVersion": "28982067",
        "creationTimestamp": "2024-11-16T00:04:10Z",
        "labels": {
          "app": "web",
          "pod-template-hash": "58b994b597"
        },
        "annotations": {
          "kubectl.kubernetes.io/restartedAt": "2024-11-02T15:26:20-04:00"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "web-58b994b597",
            "uid": "b346dee3-a9cb-47c6-8213-d968b9f48203",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:10Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:kubectl.kubernetes.io/restartedAt": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"b346dee3-a9cb-47c6-8213-d968b9f48203\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"web\"}": {
                    ".": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:terminationGracePeriodSeconds": {}
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:31Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.1.22\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-api-access-4wpbs",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "web",
            "image": "registry.digitalocean.com/mandible/web",
            "ports": [
              {
                "name": "http",
                "containerPort": 80,
                "protocol": "TCP"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "kube-api-access-4wpbs",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "Always"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "default",
        "serviceAccount": "default",
        "nodeName": "mandible-prod-default-pool-grcwb",
        "securityContext": {},
        "imagePullSecrets": [
          {
            "name": "registry-mandible"
          },
          {
            "name": "mandible"
          }
        ],
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:31Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:10Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:31Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:31Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:10Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.244.1.22",
        "podIPs": [
          {
            "ip": "10.244.1.22"
          }
        ],
        "startTime": "2024-11-16T00:04:10Z",
        "containerStatuses": [
          {
            "name": "web",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:30Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "registry.digitalocean.com/mandible/web:latest",
            "imageID": "registry.digitalocean.com/mandible/web@sha256:f3d9f2f025813190a986967a70a25fa3e603e796e9d2f6027cfd6f6a9ede79bd",
            "containerID": "containerd://f30bb03d0c62995b8fae885477225a07d2fce3517e9b49735711c0c982bb5204",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "ingress-nginx-controller-7fd488885f-k7bkm",
        "generateName": "ingress-nginx-controller-7fd488885f-",
        "namespace": "ingress-nginx",
        "uid": "41c99669-ccd4-4bc5-a20f-7f03d5a13d5b",
        "resourceVersion": "28982505",
        "creationTimestamp": "2024-11-16T00:05:28Z",
        "labels": {
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/instance": "ingress-nginx",
          "app.kubernetes.io/name": "ingress-nginx",
          "pod-template-hash": "7fd488885f"
        },
        "annotations": {
          "controller": "map[metrics:map[service:map[servicePort:9090]]]",
          "prometheus.io/port": "10254",
          "prometheus.io/scrape": "true"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "ingress-nginx-controller-7fd488885f",
            "uid": "46265798-0ada-47cd-bb1a-92e7bd217283",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:05:28Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:controller": {},
                  "f:prometheus.io/port": {},
                  "f:prometheus.io/scrape": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"46265798-0ada-47cd-bb1a-92e7bd217283\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"controller\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"LD_PRELOAD\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"POD_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"POD_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {
                      ".": {},
                      "f:preStop": {
                        ".": {},
                        "f:exec": {
                          ".": {},
                          "f:command": {}
                        }
                      }
                    },
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":443,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":10254,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:runAsUser": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/usr/local/certificates/\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"webhook-cert\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:secretName": {}
                    }
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:05:49Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.0.193\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "webhook-cert",
            "secret": {
              "secretName": "ingress-nginx-admission",
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-jjnm9",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "controller",
            "image": "k8s.gcr.io/ingress-nginx/controller:v1.1.0@sha256:f766669fdcf3dc26347ed273a55e754b427eb4411ee075a53f30718b4499076a",
            "args": [
              "/nginx-ingress-controller",
              "--publish-service=$(POD_NAMESPACE)/ingress-nginx-controller",
              "--election-id=ingress-controller-leader",
              "--controller-class=k8s.io/ingress-nginx",
              "--configmap=$(POD_NAMESPACE)/ingress-nginx-controller",
              "--validating-webhook=:8443",
              "--validating-webhook-certificate=/usr/local/certificates/cert",
              "--validating-webhook-key=/usr/local/certificates/key"
            ],
            "ports": [
              {
                "name": "http",
                "containerPort": 80,
                "protocol": "TCP"
              },
              {
                "name": "https",
                "containerPort": 443,
                "protocol": "TCP"
              },
              {
                "name": "metrics",
                "containerPort": 10254,
                "protocol": "TCP"
              },
              {
                "name": "webhook",
                "containerPort": 8443,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "POD_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.name"
                  }
                }
              },
              {
                "name": "POD_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              },
              {
                "name": "LD_PRELOAD",
                "value": "/usr/local/lib/libmimalloc.so"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "100m",
                "memory": "90Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "webhook-cert",
                "readOnly": true,
                "mountPath": "/usr/local/certificates/"
              },
              {
                "name": "kube-api-access-jjnm9",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 10254,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 5
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 10254,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "lifecycle": {
              "preStop": {
                "exec": {
                  "command": [
                    "/wait-shutdown"
                  ]
                }
              }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_BIND_SERVICE"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "runAsUser": 101,
              "allowPrivilegeEscalation": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 300,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "ingress-nginx",
        "serviceAccount": "ingress-nginx",
        "nodeName": "mandible-prod-default-pool-grcwr",
        "securityContext": {},
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:05:36Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:05:28Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:05:49Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:05:49Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:05:28Z"
          }
        ],
        "hostIP": "10.116.0.8",
        "hostIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "podIP": "10.244.0.193",
        "podIPs": [
          {
            "ip": "10.244.0.193"
          }
        ],
        "startTime": "2024-11-16T00:05:28Z",
        "containerStatuses": [
          {
            "name": "controller",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:05:36Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "sha256:ae1a7201ec9545194b2889da30face5f2a7a45e2ba8c7479ac68c9a45a73a7eb",
            "imageID": "k8s.gcr.io/ingress-nginx/controller@sha256:f766669fdcf3dc26347ed273a55e754b427eb4411ee075a53f30718b4499076a",
            "containerID": "containerd://107116e2cfc1240eb60663dc4ea1577ab18b20dfdc8d363c7de2b6a956fa28d5",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "ingress-nginx-controller-7fd488885f-wk5nt",
        "generateName": "ingress-nginx-controller-7fd488885f-",
        "namespace": "ingress-nginx",
        "uid": "b4960d93-404d-4e0c-abb1-51018313154d",
        "resourceVersion": "28982189",
        "creationTimestamp": "2024-11-16T00:04:10Z",
        "labels": {
          "app.kubernetes.io/component": "controller",
          "app.kubernetes.io/instance": "ingress-nginx",
          "app.kubernetes.io/name": "ingress-nginx",
          "pod-template-hash": "7fd488885f"
        },
        "annotations": {
          "controller": "map[metrics:map[service:map[servicePort:9090]]]",
          "prometheus.io/port": "10254",
          "prometheus.io/scrape": "true"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "ingress-nginx-controller-7fd488885f",
            "uid": "46265798-0ada-47cd-bb1a-92e7bd217283",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:10Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:controller": {},
                  "f:prometheus.io/port": {},
                  "f:prometheus.io/scrape": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/component": {},
                  "f:app.kubernetes.io/instance": {},
                  "f:app.kubernetes.io/name": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"46265798-0ada-47cd-bb1a-92e7bd217283\"}": {}
                }
              },
              "f:spec": {
                "f:containers": {
                  "k:{\"name\":\"controller\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"LD_PRELOAD\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"POD_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"POD_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {
                      ".": {},
                      "f:preStop": {
                        ".": {},
                        "f:exec": {
                          ".": {},
                          "f:command": {}
                        }
                      }
                    },
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":80,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":443,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":10254,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:runAsUser": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/usr/local/certificates/\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"webhook-cert\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:secretName": {}
                    }
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:51Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.1.28\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "webhook-cert",
            "secret": {
              "secretName": "ingress-nginx-admission",
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-28rjl",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "controller",
            "image": "k8s.gcr.io/ingress-nginx/controller:v1.1.0@sha256:f766669fdcf3dc26347ed273a55e754b427eb4411ee075a53f30718b4499076a",
            "args": [
              "/nginx-ingress-controller",
              "--publish-service=$(POD_NAMESPACE)/ingress-nginx-controller",
              "--election-id=ingress-controller-leader",
              "--controller-class=k8s.io/ingress-nginx",
              "--configmap=$(POD_NAMESPACE)/ingress-nginx-controller",
              "--validating-webhook=:8443",
              "--validating-webhook-certificate=/usr/local/certificates/cert",
              "--validating-webhook-key=/usr/local/certificates/key"
            ],
            "ports": [
              {
                "name": "http",
                "containerPort": 80,
                "protocol": "TCP"
              },
              {
                "name": "https",
                "containerPort": 443,
                "protocol": "TCP"
              },
              {
                "name": "metrics",
                "containerPort": 10254,
                "protocol": "TCP"
              },
              {
                "name": "webhook",
                "containerPort": 8443,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "POD_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.name"
                  }
                }
              },
              {
                "name": "POD_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              },
              {
                "name": "LD_PRELOAD",
                "value": "/usr/local/lib/libmimalloc.so"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "100m",
                "memory": "90Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "webhook-cert",
                "readOnly": true,
                "mountPath": "/usr/local/certificates/"
              },
              {
                "name": "kube-api-access-28rjl",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 10254,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 5
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 10254,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 10,
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "lifecycle": {
              "preStop": {
                "exec": {
                  "command": [
                    "/wait-shutdown"
                  ]
                }
              }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_BIND_SERVICE"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "runAsUser": 101,
              "allowPrivilegeEscalation": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 300,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "ingress-nginx",
        "serviceAccount": "ingress-nginx",
        "nodeName": "mandible-prod-default-pool-grcwb",
        "securityContext": {},
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:39Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:10Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:51Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:51Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:10Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.244.1.28",
        "podIPs": [
          {
            "ip": "10.244.1.28"
          }
        ],
        "startTime": "2024-11-16T00:04:10Z",
        "containerStatuses": [
          {
            "name": "controller",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:39Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "sha256:ae1a7201ec9545194b2889da30face5f2a7a45e2ba8c7479ac68c9a45a73a7eb",
            "imageID": "k8s.gcr.io/ingress-nginx/controller@sha256:f766669fdcf3dc26347ed273a55e754b427eb4411ee075a53f30718b4499076a",
            "containerID": "containerd://8b642d5dee8893251a2d9dc515a0dcf95a1be44c80f6231e3b1ab22eedf236ff",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "cilium-9mwzd",
        "generateName": "cilium-",
        "namespace": "kube-system",
        "uid": "cc36a3ab-d3d0-4456-806c-aa4f005cb7bb",
        "resourceVersion": "28981640",
        "creationTimestamp": "2024-11-16T00:03:22Z",
        "labels": {
          "app.kubernetes.io/name": "cilium-agent",
          "app.kubernetes.io/part-of": "cilium",
          "controller-revision-hash": "84b658859b",
          "doks.digitalocean.com/managed": "true",
          "k8s-app": "cilium",
          "kubernetes.io/cluster-service": "true",
          "pod-template-generation": "3"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "privileged-containers,non-root-user,resource-requirements,hostpath-volume",
          "container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites": "unconfined",
          "container.apparmor.security.beta.kubernetes.io/cilium-agent": "unconfined",
          "container.apparmor.security.beta.kubernetes.io/clean-cilium-state": "unconfined",
          "container.apparmor.security.beta.kubernetes.io/mount-cgroup": "unconfined",
          "kubectl.kubernetes.io/default-container": "cilium-agent",
          "prometheus.io/port": "9090",
          "prometheus.io/scrape": "true"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "cilium",
            "uid": "50f99d74-3a0d-4cf8-9615-7f3fbcdc1ee2",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:22Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {},
                  "f:container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites": {},
                  "f:container.apparmor.security.beta.kubernetes.io/cilium-agent": {},
                  "f:container.apparmor.security.beta.kubernetes.io/clean-cilium-state": {},
                  "f:container.apparmor.security.beta.kubernetes.io/mount-cgroup": {},
                  "f:kubectl.kubernetes.io/default-container": {},
                  "f:prometheus.io/port": {},
                  "f:prometheus.io/scrape": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:k8s-app": {},
                  "f:kubernetes.io/cluster-service": {},
                  "f:pod-template-generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"50f99d74-3a0d-4cf8-9615-7f3fbcdc1ee2\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  },
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"cilium-agent\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"CILIUM_CLUSTERMESH_CONFIG\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"CILIUM_K8S_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"K8S_NODE_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_HOST\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {
                      ".": {},
                      "f:postStart": {
                        ".": {},
                        "f:exec": {
                          ".": {},
                          "f:command": {}
                        }
                      },
                      "f:preStop": {
                        ".": {},
                        "f:exec": {
                          ".": {},
                          "f:command": {}
                        }
                      }
                    },
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:host": {},
                        "f:httpHeaders": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":4244,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:hostPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9090,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:hostPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:host": {},
                        "f:httpHeaders": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seLinuxOptions": {
                        ".": {},
                        "f:level": {},
                        "f:type": {}
                      }
                    },
                    "f:startupProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:host": {},
                        "f:httpHeaders": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/host/proc/sys/kernel\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/host/proc/sys/net\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/lib/modules\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/sys/fs/bpf\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:mountPropagation": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/var/lib/cilium/clustermesh\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/var/lib/cilium/tls/hubble\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/var/run/cilium\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostNetwork": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"apply-sysctl-overwrites\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"BIN_PATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seLinuxOptions": {
                        ".": {},
                        "f:level": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/hostbin\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/hostproc\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"clean-cilium-state\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"CILIUM_ALL_STATE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"CILIUM_BPF_STATE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_HOST\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seLinuxOptions": {
                        ".": {},
                        "f:level": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/run/cilium/cgroupv2\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:mountPropagation": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/sys/fs/bpf\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/var/run/cilium\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"config\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"CILIUM_K8S_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"K8S_NODE_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_HOST\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"delay-cilium-for-ccm\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"KUBERNETES_SERVICE_HOST\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/host/usr/bin/kubectl\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"install-cni-binaries\"}": {
                    ".": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:seLinuxOptions": {
                        ".": {},
                        "f:level": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"mount-bpf-fs\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:privileged": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/sys/fs/bpf\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:mountPropagation": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"mount-cgroup\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"BIN_PATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"CGROUP_ROOT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seLinuxOptions": {
                        ".": {},
                        "f:level": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/hostbin\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/hostproc\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"bpf-maps\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"cilium-cgroup\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"cilium-run\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"clustermesh-secrets\"}": {
                    ".": {},
                    "f:name": {},
                    "f:projected": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:sources": {}
                    }
                  },
                  "k:{\"name\":\"cni-path\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"etc-cni-netd\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"host-kubectl\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"host-proc-sys-kernel\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"host-proc-sys-net\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"hostproc\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"hubble-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:projected": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:sources": {}
                    }
                  },
                  "k:{\"name\":\"lib-modules\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tmp\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"xtables-lock\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:01Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.116.0.9\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "host-kubectl",
            "hostPath": {
              "path": "/usr/bin/kubectl",
              "type": "File"
            }
          },
          {
            "name": "tmp",
            "emptyDir": {}
          },
          {
            "name": "cilium-run",
            "hostPath": {
              "path": "/var/run/cilium",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "bpf-maps",
            "hostPath": {
              "path": "/sys/fs/bpf",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "hostproc",
            "hostPath": {
              "path": "/proc",
              "type": "Directory"
            }
          },
          {
            "name": "cilium-cgroup",
            "hostPath": {
              "path": "/run/cilium/cgroupv2",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "cni-path",
            "hostPath": {
              "path": "/opt/cni/bin",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "etc-cni-netd",
            "hostPath": {
              "path": "/etc/cni/net.d",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "lib-modules",
            "hostPath": {
              "path": "/lib/modules",
              "type": ""
            }
          },
          {
            "name": "xtables-lock",
            "hostPath": {
              "path": "/run/xtables.lock",
              "type": "FileOrCreate"
            }
          },
          {
            "name": "clustermesh-secrets",
            "projected": {
              "sources": [
                {
                  "secret": {
                    "name": "cilium-clustermesh",
                    "optional": true
                  }
                },
                {
                  "secret": {
                    "name": "clustermesh-apiserver-remote-cert",
                    "items": [
                      {
                        "key": "tls.key",
                        "path": "common-etcd-client.key"
                      },
                      {
                        "key": "tls.crt",
                        "path": "common-etcd-client.crt"
                      },
                      {
                        "key": "ca.crt",
                        "path": "common-etcd-client-ca.crt"
                      }
                    ],
                    "optional": true
                  }
                }
              ],
              "defaultMode": 256
            }
          },
          {
            "name": "host-proc-sys-net",
            "hostPath": {
              "path": "/proc/sys/net",
              "type": "Directory"
            }
          },
          {
            "name": "host-proc-sys-kernel",
            "hostPath": {
              "path": "/proc/sys/kernel",
              "type": "Directory"
            }
          },
          {
            "name": "hubble-tls",
            "projected": {
              "sources": [
                {
                  "secret": {
                    "name": "hubble-server-certs",
                    "items": [
                      {
                        "key": "tls.crt",
                        "path": "server.crt"
                      },
                      {
                        "key": "tls.key",
                        "path": "server.key"
                      },
                      {
                        "key": "ca.crt",
                        "path": "client-ca.crt"
                      }
                    ],
                    "optional": true
                  }
                }
              ],
              "defaultMode": 256
            }
          },
          {
            "name": "kube-api-access-l8nb9",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "initContainers": [
          {
            "name": "delay-cilium-for-ccm",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "bash",
              "-e",
              "-c",
              "# This will get the node object for the local node and search through\n# the assigned addresses in the object in order to check whether CCM\n# already set the internal AND external IP since cilium needs both\n# for a clean startup.\n# The grep matches regardless of the order of IPs.\nuntil /host/usr/bin/kubectl get node ${HOSTNAME} -o jsonpath=\"{.status.addresses[*].type}\" | grep -E \"InternalIP.*ExternalIP|ExternalIP.*InternalIP\"; do echo \"waiting for CCM to store internal and external IP addresses in node object: ${HOSTNAME}\" && sleep 3; done;\n"
            ],
            "env": [
              {
                "name": "KUBERNETES_SERVICE_HOST",
                "value": "80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com"
              },
              {
                "name": "KUBERNETES_SERVICE_PORT",
                "value": "443"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "100m",
                "memory": "100Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "host-kubectl",
                "mountPath": "/host/usr/bin/kubectl"
              },
              {
                "name": "kube-api-access-l8nb9",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          },
          {
            "name": "config",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "cilium",
              "build-config",
              "--source=config-map:cilium-config"
            ],
            "env": [
              {
                "name": "K8S_NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              },
              {
                "name": "CILIUM_K8S_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              },
              {
                "name": "KUBERNETES_SERVICE_HOST",
                "value": "80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com"
              },
              {
                "name": "KUBERNETES_SERVICE_PORT",
                "value": "443"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-l8nb9",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent"
          },
          {
            "name": "mount-cgroup",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "sh",
              "-ec",
              "cp /usr/bin/cilium-mount /hostbin/cilium-mount;\nnsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt \"${BIN_PATH}/cilium-mount\" $CGROUP_ROOT;\nrm /hostbin/cilium-mount\n"
            ],
            "env": [
              {
                "name": "CGROUP_ROOT",
                "value": "/run/cilium/cgroupv2"
              },
              {
                "name": "BIN_PATH",
                "value": "/opt/cni/bin"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "hostproc",
                "mountPath": "/hostproc"
              },
              {
                "name": "cni-path",
                "mountPath": "/hostbin"
              },
              {
                "name": "kube-api-access-l8nb9",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "SYS_ADMIN",
                  "SYS_CHROOT",
                  "SYS_PTRACE"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "seLinuxOptions": {
                "type": "spc_t",
                "level": "s0"
              },
              "appArmorProfile": {
                "type": "Unconfined"
              }
            }
          },
          {
            "name": "apply-sysctl-overwrites",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "sh",
              "-ec",
              "cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;\nnsenter --mount=/hostproc/1/ns/mnt \"${BIN_PATH}/cilium-sysctlfix\";\nrm /hostbin/cilium-sysctlfix\n"
            ],
            "env": [
              {
                "name": "BIN_PATH",
                "value": "/opt/cni/bin"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "hostproc",
                "mountPath": "/hostproc"
              },
              {
                "name": "cni-path",
                "mountPath": "/hostbin"
              },
              {
                "name": "kube-api-access-l8nb9",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "SYS_ADMIN",
                  "SYS_CHROOT",
                  "SYS_PTRACE"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "seLinuxOptions": {
                "type": "spc_t",
                "level": "s0"
              },
              "appArmorProfile": {
                "type": "Unconfined"
              }
            }
          },
          {
            "name": "mount-bpf-fs",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "/bin/bash",
              "-c",
              "--"
            ],
            "args": [
              "mount | grep \"/sys/fs/bpf type bpf\" || mount -t bpf bpf /sys/fs/bpf"
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "bpf-maps",
                "mountPath": "/sys/fs/bpf",
                "mountPropagation": "Bidirectional"
              },
              {
                "name": "kube-api-access-l8nb9",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          },
          {
            "name": "clean-cilium-state",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "/init-container.sh"
            ],
            "env": [
              {
                "name": "CILIUM_ALL_STATE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "cilium-config",
                    "key": "clean-cilium-state",
                    "optional": true
                  }
                }
              },
              {
                "name": "CILIUM_BPF_STATE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "cilium-config",
                    "key": "clean-cilium-bpf-state",
                    "optional": true
                  }
                }
              },
              {
                "name": "KUBERNETES_SERVICE_HOST",
                "value": "80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com"
              },
              {
                "name": "KUBERNETES_SERVICE_PORT",
                "value": "443"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "bpf-maps",
                "mountPath": "/sys/fs/bpf"
              },
              {
                "name": "cilium-cgroup",
                "mountPath": "/run/cilium/cgroupv2",
                "mountPropagation": "HostToContainer"
              },
              {
                "name": "cilium-run",
                "mountPath": "/var/run/cilium"
              },
              {
                "name": "kube-api-access-l8nb9",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_ADMIN",
                  "SYS_MODULE",
                  "SYS_ADMIN",
                  "SYS_RESOURCE"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "seLinuxOptions": {
                "type": "spc_t",
                "level": "s0"
              },
              "appArmorProfile": {
                "type": "Unconfined"
              }
            }
          },
          {
            "name": "install-cni-binaries",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "/install-plugin.sh"
            ],
            "resources": {
              "requests": {
                "cpu": "100m",
                "memory": "10Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "cni-path",
                "mountPath": "/host/opt/cni/bin"
              },
              {
                "name": "kube-api-access-l8nb9",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "seLinuxOptions": {
                "type": "spc_t",
                "level": "s0"
              }
            }
          }
        ],
        "containers": [
          {
            "name": "cilium-agent",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "cilium-agent"
            ],
            "args": [
              "--config-dir=/tmp/cilium/config-map",
              "--k8s-api-server=https://80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com",
              "--ipv4-native-routing-cidr=10.244.0.0/16"
            ],
            "ports": [
              {
                "name": "peer-service",
                "hostPort": 4244,
                "containerPort": 4244,
                "protocol": "TCP"
              },
              {
                "name": "prometheus",
                "hostPort": 9090,
                "containerPort": 9090,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "K8S_NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              },
              {
                "name": "CILIUM_K8S_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              },
              {
                "name": "CILIUM_CLUSTERMESH_CONFIG",
                "value": "/var/lib/cilium/clustermesh/"
              },
              {
                "name": "KUBERNETES_SERVICE_HOST",
                "value": "80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com"
              },
              {
                "name": "KUBERNETES_SERVICE_PORT",
                "value": "443"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "300m",
                "memory": "300Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "host-proc-sys-net",
                "mountPath": "/host/proc/sys/net"
              },
              {
                "name": "host-proc-sys-kernel",
                "mountPath": "/host/proc/sys/kernel"
              },
              {
                "name": "bpf-maps",
                "mountPath": "/sys/fs/bpf",
                "mountPropagation": "HostToContainer"
              },
              {
                "name": "cilium-run",
                "mountPath": "/var/run/cilium"
              },
              {
                "name": "etc-cni-netd",
                "mountPath": "/host/etc/cni/net.d"
              },
              {
                "name": "clustermesh-secrets",
                "readOnly": true,
                "mountPath": "/var/lib/cilium/clustermesh"
              },
              {
                "name": "lib-modules",
                "readOnly": true,
                "mountPath": "/lib/modules"
              },
              {
                "name": "xtables-lock",
                "mountPath": "/run/xtables.lock"
              },
              {
                "name": "hubble-tls",
                "readOnly": true,
                "mountPath": "/var/lib/cilium/tls/hubble"
              },
              {
                "name": "tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-l8nb9",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 9879,
                "host": "127.0.0.1",
                "scheme": "HTTP",
                "httpHeaders": [
                  {
                    "name": "brief",
                    "value": "true"
                  }
                ]
              },
              "initialDelaySeconds": 120,
              "timeoutSeconds": 5,
              "periodSeconds": 30,
              "successThreshold": 1,
              "failureThreshold": 10
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 9879,
                "host": "127.0.0.1",
                "scheme": "HTTP",
                "httpHeaders": [
                  {
                    "name": "brief",
                    "value": "true"
                  }
                ]
              },
              "timeoutSeconds": 5,
              "periodSeconds": 30,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "startupProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 9879,
                "host": "127.0.0.1",
                "scheme": "HTTP",
                "httpHeaders": [
                  {
                    "name": "brief",
                    "value": "true"
                  }
                ]
              },
              "timeoutSeconds": 1,
              "periodSeconds": 2,
              "successThreshold": 1,
              "failureThreshold": 105
            },
            "lifecycle": {
              "postStart": {
                "exec": {
                  "command": [
                    "bash",
                    "-c",
                    "set -o errexit\nset -o pipefail\nset -o nounset\n\n# When running in AWS ENI mode, it's likely that 'aws-node' has\n# had a chance to install SNAT iptables rules. These can result\n# in dropped traffic, so we should attempt to remove them.\n# We do it using a 'postStart' hook since this may need to run\n# for nodes which might have already been init'ed but may still\n# have dangling rules. This is safe because there are no\n# dependencies on anything that is part of the startup script\n# itself, and can be safely run multiple times per node (e.g. in\n# case of a restart).\nif [[ \"$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')\" != \"0\" ]];\nthen\n    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'\n    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore\nfi\necho 'Done!'\n"
                  ]
                }
              },
              "preStop": {
                "exec": {
                  "command": [
                    "/cni-uninstall.sh"
                  ]
                }
              }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "CHOWN",
                  "KILL",
                  "NET_ADMIN",
                  "NET_RAW",
                  "IPC_LOCK",
                  "SYS_MODULE",
                  "SYS_ADMIN",
                  "SYS_RESOURCE",
                  "DAC_OVERRIDE",
                  "FOWNER",
                  "SETGID",
                  "SETUID"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "seLinuxOptions": {
                "type": "spc_t",
                "level": "s0"
              },
              "appArmorProfile": {
                "type": "Unconfined"
              }
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 1,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "cilium",
        "serviceAccount": "cilium",
        "automountServiceAccountToken": true,
        "nodeName": "mandible-prod-default-pool-grcwb",
        "hostNetwork": true,
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwb"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "podAntiAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": {
                    "k8s-app": "cilium"
                  }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:47Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:55Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:01Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:01Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:22Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.116.0.9",
        "podIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "startTime": "2024-11-16T00:03:22Z",
        "initContainerStatuses": [
          {
            "name": "delay-cilium-for-ccm",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:47Z",
                "finishedAt": "2024-11-16T00:03:47Z",
                "containerID": "containerd://664a3aadbbf37e9de0333b721b752f060a748434d8719fe1ed9c1f5cf803c687"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://664a3aadbbf37e9de0333b721b752f060a748434d8719fe1ed9c1f5cf803c687",
            "started": false
          },
          {
            "name": "config",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:48Z",
                "finishedAt": "2024-11-16T00:03:49Z",
                "containerID": "containerd://6c763308678ae16712c08b193fb2c80ce8294e757d81b0bc0b714f2140135666"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://6c763308678ae16712c08b193fb2c80ce8294e757d81b0bc0b714f2140135666",
            "started": false
          },
          {
            "name": "mount-cgroup",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:50Z",
                "finishedAt": "2024-11-16T00:03:50Z",
                "containerID": "containerd://a2b47a4acfcd641d9adc7e25ff7d1edbafdd0fbb0686cb7a75356e6a8e7acbb4"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://a2b47a4acfcd641d9adc7e25ff7d1edbafdd0fbb0686cb7a75356e6a8e7acbb4",
            "started": false
          },
          {
            "name": "apply-sysctl-overwrites",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:51Z",
                "finishedAt": "2024-11-16T00:03:51Z",
                "containerID": "containerd://a7158d097b3b422945c8b037560d3f0ff51ef0c99308fd62e8976ee9a03c0e51"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://a7158d097b3b422945c8b037560d3f0ff51ef0c99308fd62e8976ee9a03c0e51",
            "started": false
          },
          {
            "name": "mount-bpf-fs",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:52Z",
                "finishedAt": "2024-11-16T00:03:52Z",
                "containerID": "containerd://d6e01f4fb336f7e938ed2b3a0c0ee5ff405899e952e12260a2f914f0821403dc"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://d6e01f4fb336f7e938ed2b3a0c0ee5ff405899e952e12260a2f914f0821403dc",
            "started": false
          },
          {
            "name": "clean-cilium-state",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:53Z",
                "finishedAt": "2024-11-16T00:03:53Z",
                "containerID": "containerd://dd94c4acdc69cc09e54e5e5e069b5469b0c457ef93c6fe385e9d089465e1e283"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://dd94c4acdc69cc09e54e5e5e069b5469b0c457ef93c6fe385e9d089465e1e283",
            "started": false
          },
          {
            "name": "install-cni-binaries",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:54Z",
                "finishedAt": "2024-11-16T00:03:54Z",
                "containerID": "containerd://e77dca24b589889b529ddf248cb9c70f2262643139d58c25699075804065f250"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://e77dca24b589889b529ddf248cb9c70f2262643139d58c25699075804065f250",
            "started": false
          }
        ],
        "containerStatuses": [
          {
            "name": "cilium-agent",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:55Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://b1ab127bbb8412612db5ca2df4192d86aa389504837f57ef591647c7e85245c4",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "cilium-vghn5",
        "generateName": "cilium-",
        "namespace": "kube-system",
        "uid": "9fdd6dc9-56fe-4ba4-bc08-c29bb8fa4c68",
        "resourceVersion": "28981522",
        "creationTimestamp": "2024-11-16T00:03:14Z",
        "labels": {
          "app.kubernetes.io/name": "cilium-agent",
          "app.kubernetes.io/part-of": "cilium",
          "controller-revision-hash": "84b658859b",
          "doks.digitalocean.com/managed": "true",
          "k8s-app": "cilium",
          "kubernetes.io/cluster-service": "true",
          "pod-template-generation": "3"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "privileged-containers,non-root-user,resource-requirements,hostpath-volume",
          "container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites": "unconfined",
          "container.apparmor.security.beta.kubernetes.io/cilium-agent": "unconfined",
          "container.apparmor.security.beta.kubernetes.io/clean-cilium-state": "unconfined",
          "container.apparmor.security.beta.kubernetes.io/mount-cgroup": "unconfined",
          "kubectl.kubernetes.io/default-container": "cilium-agent",
          "prometheus.io/port": "9090",
          "prometheus.io/scrape": "true"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "cilium",
            "uid": "50f99d74-3a0d-4cf8-9615-7f3fbcdc1ee2",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:14Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {},
                  "f:container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites": {},
                  "f:container.apparmor.security.beta.kubernetes.io/cilium-agent": {},
                  "f:container.apparmor.security.beta.kubernetes.io/clean-cilium-state": {},
                  "f:container.apparmor.security.beta.kubernetes.io/mount-cgroup": {},
                  "f:kubectl.kubernetes.io/default-container": {},
                  "f:prometheus.io/port": {},
                  "f:prometheus.io/scrape": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:k8s-app": {},
                  "f:kubernetes.io/cluster-service": {},
                  "f:pod-template-generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"50f99d74-3a0d-4cf8-9615-7f3fbcdc1ee2\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  },
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"cilium-agent\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"CILIUM_CLUSTERMESH_CONFIG\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"CILIUM_K8S_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"K8S_NODE_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_HOST\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {
                      ".": {},
                      "f:postStart": {
                        ".": {},
                        "f:exec": {
                          ".": {},
                          "f:command": {}
                        }
                      },
                      "f:preStop": {
                        ".": {},
                        "f:exec": {
                          ".": {},
                          "f:command": {}
                        }
                      }
                    },
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:host": {},
                        "f:httpHeaders": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":4244,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:hostPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9090,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:hostPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:host": {},
                        "f:httpHeaders": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seLinuxOptions": {
                        ".": {},
                        "f:level": {},
                        "f:type": {}
                      }
                    },
                    "f:startupProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:host": {},
                        "f:httpHeaders": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/host/etc/cni/net.d\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/host/proc/sys/kernel\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/host/proc/sys/net\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/lib/modules\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/run/xtables.lock\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/sys/fs/bpf\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:mountPropagation": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/var/lib/cilium/clustermesh\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/var/lib/cilium/tls/hubble\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/var/run/cilium\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostNetwork": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"apply-sysctl-overwrites\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"BIN_PATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seLinuxOptions": {
                        ".": {},
                        "f:level": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/hostbin\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/hostproc\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"clean-cilium-state\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"CILIUM_ALL_STATE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"CILIUM_BPF_STATE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:configMapKeyRef": {}
                        }
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_HOST\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seLinuxOptions": {
                        ".": {},
                        "f:level": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/run/cilium/cgroupv2\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:mountPropagation": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/sys/fs/bpf\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/var/run/cilium\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"config\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"CILIUM_K8S_NAMESPACE\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"K8S_NODE_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_HOST\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"delay-cilium-for-ccm\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"KUBERNETES_SERVICE_HOST\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"KUBERNETES_SERVICE_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/host/usr/bin/kubectl\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"install-cni-binaries\"}": {
                    ".": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:seLinuxOptions": {
                        ".": {},
                        "f:level": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/host/opt/cni/bin\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"mount-bpf-fs\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:privileged": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/sys/fs/bpf\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:mountPropagation": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"mount-cgroup\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"BIN_PATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"CGROUP_ROOT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:seLinuxOptions": {
                        ".": {},
                        "f:level": {},
                        "f:type": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/hostbin\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/hostproc\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"bpf-maps\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"cilium-cgroup\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"cilium-run\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"clustermesh-secrets\"}": {
                    ".": {},
                    "f:name": {},
                    "f:projected": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:sources": {}
                    }
                  },
                  "k:{\"name\":\"cni-path\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"etc-cni-netd\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"host-kubectl\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"host-proc-sys-kernel\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"host-proc-sys-net\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"hostproc\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"hubble-tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:projected": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:sources": {}
                    }
                  },
                  "k:{\"name\":\"lib-modules\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tmp\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"xtables-lock\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:47Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.116.0.8\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "host-kubectl",
            "hostPath": {
              "path": "/usr/bin/kubectl",
              "type": "File"
            }
          },
          {
            "name": "tmp",
            "emptyDir": {}
          },
          {
            "name": "cilium-run",
            "hostPath": {
              "path": "/var/run/cilium",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "bpf-maps",
            "hostPath": {
              "path": "/sys/fs/bpf",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "hostproc",
            "hostPath": {
              "path": "/proc",
              "type": "Directory"
            }
          },
          {
            "name": "cilium-cgroup",
            "hostPath": {
              "path": "/run/cilium/cgroupv2",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "cni-path",
            "hostPath": {
              "path": "/opt/cni/bin",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "etc-cni-netd",
            "hostPath": {
              "path": "/etc/cni/net.d",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "lib-modules",
            "hostPath": {
              "path": "/lib/modules",
              "type": ""
            }
          },
          {
            "name": "xtables-lock",
            "hostPath": {
              "path": "/run/xtables.lock",
              "type": "FileOrCreate"
            }
          },
          {
            "name": "clustermesh-secrets",
            "projected": {
              "sources": [
                {
                  "secret": {
                    "name": "cilium-clustermesh",
                    "optional": true
                  }
                },
                {
                  "secret": {
                    "name": "clustermesh-apiserver-remote-cert",
                    "items": [
                      {
                        "key": "tls.key",
                        "path": "common-etcd-client.key"
                      },
                      {
                        "key": "tls.crt",
                        "path": "common-etcd-client.crt"
                      },
                      {
                        "key": "ca.crt",
                        "path": "common-etcd-client-ca.crt"
                      }
                    ],
                    "optional": true
                  }
                }
              ],
              "defaultMode": 256
            }
          },
          {
            "name": "host-proc-sys-net",
            "hostPath": {
              "path": "/proc/sys/net",
              "type": "Directory"
            }
          },
          {
            "name": "host-proc-sys-kernel",
            "hostPath": {
              "path": "/proc/sys/kernel",
              "type": "Directory"
            }
          },
          {
            "name": "hubble-tls",
            "projected": {
              "sources": [
                {
                  "secret": {
                    "name": "hubble-server-certs",
                    "items": [
                      {
                        "key": "tls.crt",
                        "path": "server.crt"
                      },
                      {
                        "key": "tls.key",
                        "path": "server.key"
                      },
                      {
                        "key": "ca.crt",
                        "path": "client-ca.crt"
                      }
                    ],
                    "optional": true
                  }
                }
              ],
              "defaultMode": 256
            }
          },
          {
            "name": "kube-api-access-znggf",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "initContainers": [
          {
            "name": "delay-cilium-for-ccm",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "bash",
              "-e",
              "-c",
              "# This will get the node object for the local node and search through\n# the assigned addresses in the object in order to check whether CCM\n# already set the internal AND external IP since cilium needs both\n# for a clean startup.\n# The grep matches regardless of the order of IPs.\nuntil /host/usr/bin/kubectl get node ${HOSTNAME} -o jsonpath=\"{.status.addresses[*].type}\" | grep -E \"InternalIP.*ExternalIP|ExternalIP.*InternalIP\"; do echo \"waiting for CCM to store internal and external IP addresses in node object: ${HOSTNAME}\" && sleep 3; done;\n"
            ],
            "env": [
              {
                "name": "KUBERNETES_SERVICE_HOST",
                "value": "80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com"
              },
              {
                "name": "KUBERNETES_SERVICE_PORT",
                "value": "443"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "100m",
                "memory": "100Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "host-kubectl",
                "mountPath": "/host/usr/bin/kubectl"
              },
              {
                "name": "kube-api-access-znggf",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          },
          {
            "name": "config",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "cilium",
              "build-config",
              "--source=config-map:cilium-config"
            ],
            "env": [
              {
                "name": "K8S_NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              },
              {
                "name": "CILIUM_K8S_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              },
              {
                "name": "KUBERNETES_SERVICE_HOST",
                "value": "80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com"
              },
              {
                "name": "KUBERNETES_SERVICE_PORT",
                "value": "443"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-znggf",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent"
          },
          {
            "name": "mount-cgroup",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "sh",
              "-ec",
              "cp /usr/bin/cilium-mount /hostbin/cilium-mount;\nnsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt \"${BIN_PATH}/cilium-mount\" $CGROUP_ROOT;\nrm /hostbin/cilium-mount\n"
            ],
            "env": [
              {
                "name": "CGROUP_ROOT",
                "value": "/run/cilium/cgroupv2"
              },
              {
                "name": "BIN_PATH",
                "value": "/opt/cni/bin"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "hostproc",
                "mountPath": "/hostproc"
              },
              {
                "name": "cni-path",
                "mountPath": "/hostbin"
              },
              {
                "name": "kube-api-access-znggf",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "SYS_ADMIN",
                  "SYS_CHROOT",
                  "SYS_PTRACE"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "seLinuxOptions": {
                "type": "spc_t",
                "level": "s0"
              },
              "appArmorProfile": {
                "type": "Unconfined"
              }
            }
          },
          {
            "name": "apply-sysctl-overwrites",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "sh",
              "-ec",
              "cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;\nnsenter --mount=/hostproc/1/ns/mnt \"${BIN_PATH}/cilium-sysctlfix\";\nrm /hostbin/cilium-sysctlfix\n"
            ],
            "env": [
              {
                "name": "BIN_PATH",
                "value": "/opt/cni/bin"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "hostproc",
                "mountPath": "/hostproc"
              },
              {
                "name": "cni-path",
                "mountPath": "/hostbin"
              },
              {
                "name": "kube-api-access-znggf",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "SYS_ADMIN",
                  "SYS_CHROOT",
                  "SYS_PTRACE"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "seLinuxOptions": {
                "type": "spc_t",
                "level": "s0"
              },
              "appArmorProfile": {
                "type": "Unconfined"
              }
            }
          },
          {
            "name": "mount-bpf-fs",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "/bin/bash",
              "-c",
              "--"
            ],
            "args": [
              "mount | grep \"/sys/fs/bpf type bpf\" || mount -t bpf bpf /sys/fs/bpf"
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "bpf-maps",
                "mountPath": "/sys/fs/bpf",
                "mountPropagation": "Bidirectional"
              },
              {
                "name": "kube-api-access-znggf",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          },
          {
            "name": "clean-cilium-state",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "/init-container.sh"
            ],
            "env": [
              {
                "name": "CILIUM_ALL_STATE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "cilium-config",
                    "key": "clean-cilium-state",
                    "optional": true
                  }
                }
              },
              {
                "name": "CILIUM_BPF_STATE",
                "valueFrom": {
                  "configMapKeyRef": {
                    "name": "cilium-config",
                    "key": "clean-cilium-bpf-state",
                    "optional": true
                  }
                }
              },
              {
                "name": "KUBERNETES_SERVICE_HOST",
                "value": "80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com"
              },
              {
                "name": "KUBERNETES_SERVICE_PORT",
                "value": "443"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "bpf-maps",
                "mountPath": "/sys/fs/bpf"
              },
              {
                "name": "cilium-cgroup",
                "mountPath": "/run/cilium/cgroupv2",
                "mountPropagation": "HostToContainer"
              },
              {
                "name": "cilium-run",
                "mountPath": "/var/run/cilium"
              },
              {
                "name": "kube-api-access-znggf",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_ADMIN",
                  "SYS_MODULE",
                  "SYS_ADMIN",
                  "SYS_RESOURCE"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "seLinuxOptions": {
                "type": "spc_t",
                "level": "s0"
              },
              "appArmorProfile": {
                "type": "Unconfined"
              }
            }
          },
          {
            "name": "install-cni-binaries",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "/install-plugin.sh"
            ],
            "resources": {
              "requests": {
                "cpu": "100m",
                "memory": "10Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "cni-path",
                "mountPath": "/host/opt/cni/bin"
              },
              {
                "name": "kube-api-access-znggf",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "seLinuxOptions": {
                "type": "spc_t",
                "level": "s0"
              }
            }
          }
        ],
        "containers": [
          {
            "name": "cilium-agent",
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "command": [
              "cilium-agent"
            ],
            "args": [
              "--config-dir=/tmp/cilium/config-map",
              "--k8s-api-server=https://80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com",
              "--ipv4-native-routing-cidr=10.244.0.0/16"
            ],
            "ports": [
              {
                "name": "peer-service",
                "hostPort": 4244,
                "containerPort": 4244,
                "protocol": "TCP"
              },
              {
                "name": "prometheus",
                "hostPort": 9090,
                "containerPort": 9090,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "K8S_NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              },
              {
                "name": "CILIUM_K8S_NAMESPACE",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              },
              {
                "name": "CILIUM_CLUSTERMESH_CONFIG",
                "value": "/var/lib/cilium/clustermesh/"
              },
              {
                "name": "KUBERNETES_SERVICE_HOST",
                "value": "80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com"
              },
              {
                "name": "KUBERNETES_SERVICE_PORT",
                "value": "443"
              }
            ],
            "resources": {
              "requests": {
                "cpu": "300m",
                "memory": "300Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "host-proc-sys-net",
                "mountPath": "/host/proc/sys/net"
              },
              {
                "name": "host-proc-sys-kernel",
                "mountPath": "/host/proc/sys/kernel"
              },
              {
                "name": "bpf-maps",
                "mountPath": "/sys/fs/bpf",
                "mountPropagation": "HostToContainer"
              },
              {
                "name": "cilium-run",
                "mountPath": "/var/run/cilium"
              },
              {
                "name": "etc-cni-netd",
                "mountPath": "/host/etc/cni/net.d"
              },
              {
                "name": "clustermesh-secrets",
                "readOnly": true,
                "mountPath": "/var/lib/cilium/clustermesh"
              },
              {
                "name": "lib-modules",
                "readOnly": true,
                "mountPath": "/lib/modules"
              },
              {
                "name": "xtables-lock",
                "mountPath": "/run/xtables.lock"
              },
              {
                "name": "hubble-tls",
                "readOnly": true,
                "mountPath": "/var/lib/cilium/tls/hubble"
              },
              {
                "name": "tmp",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-znggf",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 9879,
                "host": "127.0.0.1",
                "scheme": "HTTP",
                "httpHeaders": [
                  {
                    "name": "brief",
                    "value": "true"
                  }
                ]
              },
              "initialDelaySeconds": 120,
              "timeoutSeconds": 5,
              "periodSeconds": 30,
              "successThreshold": 1,
              "failureThreshold": 10
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 9879,
                "host": "127.0.0.1",
                "scheme": "HTTP",
                "httpHeaders": [
                  {
                    "name": "brief",
                    "value": "true"
                  }
                ]
              },
              "timeoutSeconds": 5,
              "periodSeconds": 30,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "startupProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 9879,
                "host": "127.0.0.1",
                "scheme": "HTTP",
                "httpHeaders": [
                  {
                    "name": "brief",
                    "value": "true"
                  }
                ]
              },
              "timeoutSeconds": 1,
              "periodSeconds": 2,
              "successThreshold": 1,
              "failureThreshold": 105
            },
            "lifecycle": {
              "postStart": {
                "exec": {
                  "command": [
                    "bash",
                    "-c",
                    "set -o errexit\nset -o pipefail\nset -o nounset\n\n# When running in AWS ENI mode, it's likely that 'aws-node' has\n# had a chance to install SNAT iptables rules. These can result\n# in dropped traffic, so we should attempt to remove them.\n# We do it using a 'postStart' hook since this may need to run\n# for nodes which might have already been init'ed but may still\n# have dangling rules. This is safe because there are no\n# dependencies on anything that is part of the startup script\n# itself, and can be safely run multiple times per node (e.g. in\n# case of a restart).\nif [[ \"$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')\" != \"0\" ]];\nthen\n    echo 'Deleting iptables rules created by the AWS CNI VPC plugin'\n    iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore\nfi\necho 'Done!'\n"
                  ]
                }
              },
              "preStop": {
                "exec": {
                  "command": [
                    "/cni-uninstall.sh"
                  ]
                }
              }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "CHOWN",
                  "KILL",
                  "NET_ADMIN",
                  "NET_RAW",
                  "IPC_LOCK",
                  "SYS_MODULE",
                  "SYS_ADMIN",
                  "SYS_RESOURCE",
                  "DAC_OVERRIDE",
                  "FOWNER",
                  "SETGID",
                  "SETUID"
                ],
                "drop": [
                  "ALL"
                ]
              },
              "seLinuxOptions": {
                "type": "spc_t",
                "level": "s0"
              },
              "appArmorProfile": {
                "type": "Unconfined"
              }
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 1,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "cilium",
        "serviceAccount": "cilium",
        "automountServiceAccountToken": true,
        "nodeName": "mandible-prod-default-pool-grcwr",
        "hostNetwork": true,
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwr"
                      ]
                    }
                  ]
                }
              ]
            }
          },
          "podAntiAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": {
                    "k8s-app": "cilium"
                  }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:35Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:42Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:47Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:47Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:14Z"
          }
        ],
        "hostIP": "10.116.0.8",
        "hostIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "podIP": "10.116.0.8",
        "podIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "startTime": "2024-11-16T00:03:14Z",
        "initContainerStatuses": [
          {
            "name": "delay-cilium-for-ccm",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:35Z",
                "finishedAt": "2024-11-16T00:03:35Z",
                "containerID": "containerd://9570920aed2aa73d5e44869d0936f76c9bca1ef3e7e4f78dfd2d394119fc27c6"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://9570920aed2aa73d5e44869d0936f76c9bca1ef3e7e4f78dfd2d394119fc27c6",
            "started": false
          },
          {
            "name": "config",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:35Z",
                "finishedAt": "2024-11-16T00:03:35Z",
                "containerID": "containerd://4f1738e70181bfd74930f4992b14bd09d02395980b7b2c513c440ee0bdf3f424"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://4f1738e70181bfd74930f4992b14bd09d02395980b7b2c513c440ee0bdf3f424",
            "started": false
          },
          {
            "name": "mount-cgroup",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:36Z",
                "finishedAt": "2024-11-16T00:03:36Z",
                "containerID": "containerd://b977ae41979b0473488d808f563a9d1dac990d22afb24ac7414cbc22777b3f28"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://b977ae41979b0473488d808f563a9d1dac990d22afb24ac7414cbc22777b3f28",
            "started": false
          },
          {
            "name": "apply-sysctl-overwrites",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:37Z",
                "finishedAt": "2024-11-16T00:03:37Z",
                "containerID": "containerd://135313c2a1f3e3117fade7063787688d17f55cac792f2b5c02068dce66fed48e"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://135313c2a1f3e3117fade7063787688d17f55cac792f2b5c02068dce66fed48e",
            "started": false
          },
          {
            "name": "mount-bpf-fs",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:38Z",
                "finishedAt": "2024-11-16T00:03:38Z",
                "containerID": "containerd://fb4088bdfd85e32f0545f17033e2064cdc6372013e26e7b1074027e7f4eb0a44"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://fb4088bdfd85e32f0545f17033e2064cdc6372013e26e7b1074027e7f4eb0a44",
            "started": false
          },
          {
            "name": "clean-cilium-state",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:39Z",
                "finishedAt": "2024-11-16T00:03:39Z",
                "containerID": "containerd://a20e9fdc6d681bd8a6ba9b07e127d537348662e8da913238b5687b1bad4f26ba"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://a20e9fdc6d681bd8a6ba9b07e127d537348662e8da913238b5687b1bad4f26ba",
            "started": false
          },
          {
            "name": "install-cni-binaries",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:40Z",
                "finishedAt": "2024-11-16T00:03:40Z",
                "containerID": "containerd://0a08cae07194d56d0fa4a322f76871b8279e210e2a43e2c4c30f3bbd2ea49dbf"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://0a08cae07194d56d0fa4a322f76871b8279e210e2a43e2c4c30f3bbd2ea49dbf",
            "started": false
          }
        ],
        "containerStatuses": [
          {
            "name": "cilium-agent",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:42Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cilium:v1.14.14-conformance-fix",
            "imageID": "docker.io/digitalocean/cilium@sha256:241e51bbd436c0d3b6c9b438e26bbf6808e91e25559f04ceb3638f83c3d73549",
            "containerID": "containerd://1eb595b3efd9a0d4ae1106c77b88a692e871b17a2360a235118f0ce70fc1306d",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "coredns-7d4cfdd6f4-9b4kg",
        "generateName": "coredns-7d4cfdd6f4-",
        "namespace": "kube-system",
        "uid": "7bccd34c-af58-4995-a6b0-a22d3865bfc5",
        "resourceVersion": "28982104",
        "creationTimestamp": "2024-11-16T00:04:23Z",
        "labels": {
          "doks.digitalocean.com/managed": "true",
          "k8s-app": "kube-dns",
          "pod-template-hash": "7d4cfdd6f4"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "coredns-7d4cfdd6f4",
            "uid": "898727aa-a192-4e56-91c7-f2a3c07c792c",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:23Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:k8s-app": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"898727aa-a192-4e56-91c7-f2a3c07c792c\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  },
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"coredns\"}": {
                    ".": {},
                    "f:args": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {
                      ".": {},
                      "f:limits": {
                        ".": {},
                        "f:memory": {}
                      },
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/coredns\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/etc/coredns/custom\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config-volume\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"custom-config-volume\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {},
                      "f:optional": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:34Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.1.117\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "config-volume",
            "configMap": {
              "name": "coredns",
              "items": [
                {
                  "key": "Corefile",
                  "path": "Corefile"
                }
              ],
              "defaultMode": 420
            }
          },
          {
            "name": "custom-config-volume",
            "configMap": {
              "name": "coredns-custom",
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "kube-api-access-dprk2",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "coredns",
            "image": "docker.io/coredns/coredns:1.11.1",
            "args": [
              "-conf",
              "/etc/coredns/Corefile"
            ],
            "ports": [
              {
                "name": "dns",
                "containerPort": 53,
                "protocol": "UDP"
              },
              {
                "name": "dns-tcp",
                "containerPort": 53,
                "protocol": "TCP"
              },
              {
                "name": "metrics",
                "containerPort": 9153,
                "protocol": "TCP"
              }
            ],
            "resources": {
              "limits": {
                "memory": "170Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "70Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config-volume",
                "readOnly": true,
                "mountPath": "/etc/coredns"
              },
              {
                "name": "custom-config-volume",
                "readOnly": true,
                "mountPath": "/etc/coredns/custom"
              },
              {
                "name": "kube-api-access-dprk2",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 60,
              "timeoutSeconds": 5,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 5
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/ready",
                "port": 8181,
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_BIND_SERVICE"
                ],
                "drop": [
                  "all"
                ]
              },
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "Default",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "coredns",
        "serviceAccount": "coredns",
        "nodeName": "mandible-prod-default-pool-grcwb",
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 50,
                "preference": {
                  "matchExpressions": [
                    {
                      "key": "doks.digitalocean.com/gpu-brand",
                      "operator": "DoesNotExist"
                    }
                  ]
                }
              }
            ]
          },
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 100,
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchExpressions": [
                      {
                        "key": "k8s-app",
                        "operator": "In",
                        "values": [
                          "kube-dns"
                        ]
                      }
                    ]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "nvidia.com/gpu",
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priorityClassName": "system-cluster-critical",
        "priority": 2000000000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:34Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:23Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:34Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:34Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:23Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.244.1.117",
        "podIPs": [
          {
            "ip": "10.244.1.117"
          }
        ],
        "startTime": "2024-11-16T00:04:23Z",
        "containerStatuses": [
          {
            "name": "coredns",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:33Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/coredns/coredns:1.11.1",
            "imageID": "docker.io/coredns/coredns@sha256:1eeb4c7316bacb1d4c8ead65571cd92dd21e27359f0d4917f1a5822a73b75db1",
            "containerID": "containerd://ba7a567c7d41f0f4d6b0bb89aee3c2926bfe598c1005687550f249a43f07dc95",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "coredns-7d4cfdd6f4-zbqz5",
        "generateName": "coredns-7d4cfdd6f4-",
        "namespace": "kube-system",
        "uid": "8892d58b-235a-4b0f-a1ca-06d76d38508a",
        "resourceVersion": "28981914",
        "creationTimestamp": "2024-11-16T00:04:10Z",
        "labels": {
          "doks.digitalocean.com/managed": "true",
          "k8s-app": "kube-dns",
          "pod-template-hash": "7d4cfdd6f4"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "coredns-7d4cfdd6f4",
            "uid": "898727aa-a192-4e56-91c7-f2a3c07c792c",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:10Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:k8s-app": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"898727aa-a192-4e56-91c7-f2a3c07c792c\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  },
                  "f:podAntiAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"coredns\"}": {
                    ".": {},
                    "f:args": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":53,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":53,\"protocol\":\"UDP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      },
                      "k:{\"containerPort\":9153,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {
                      ".": {},
                      "f:limits": {
                        ".": {},
                        "f:memory": {}
                      },
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {},
                        "f:drop": {}
                      },
                      "f:readOnlyRootFilesystem": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/coredns\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/etc/coredns/custom\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config-volume\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"custom-config-volume\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {},
                      "f:optional": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:13Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.0.180\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "config-volume",
            "configMap": {
              "name": "coredns",
              "items": [
                {
                  "key": "Corefile",
                  "path": "Corefile"
                }
              ],
              "defaultMode": 420
            }
          },
          {
            "name": "custom-config-volume",
            "configMap": {
              "name": "coredns-custom",
              "defaultMode": 420,
              "optional": true
            }
          },
          {
            "name": "kube-api-access-bls8w",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "coredns",
            "image": "docker.io/coredns/coredns:1.11.1",
            "args": [
              "-conf",
              "/etc/coredns/Corefile"
            ],
            "ports": [
              {
                "name": "dns",
                "containerPort": 53,
                "protocol": "UDP"
              },
              {
                "name": "dns-tcp",
                "containerPort": 53,
                "protocol": "TCP"
              },
              {
                "name": "metrics",
                "containerPort": 9153,
                "protocol": "TCP"
              }
            ],
            "resources": {
              "limits": {
                "memory": "170Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "70Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "config-volume",
                "readOnly": true,
                "mountPath": "/etc/coredns"
              },
              {
                "name": "custom-config-volume",
                "readOnly": true,
                "mountPath": "/etc/coredns/custom"
              },
              {
                "name": "kube-api-access-bls8w",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/health",
                "port": 8080,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 60,
              "timeoutSeconds": 5,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 5
            },
            "readinessProbe": {
              "httpGet": {
                "path": "/ready",
                "port": 8181,
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_BIND_SERVICE"
                ],
                "drop": [
                  "all"
                ]
              },
              "readOnlyRootFilesystem": true,
              "allowPrivilegeEscalation": false
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "Default",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "coredns",
        "serviceAccount": "coredns",
        "nodeName": "mandible-prod-default-pool-grcwr",
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 50,
                "preference": {
                  "matchExpressions": [
                    {
                      "key": "doks.digitalocean.com/gpu-brand",
                      "operator": "DoesNotExist"
                    }
                  ]
                }
              }
            ]
          },
          "podAntiAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 100,
                "podAffinityTerm": {
                  "labelSelector": {
                    "matchExpressions": [
                      {
                        "key": "k8s-app",
                        "operator": "In",
                        "values": [
                          "kube-dns"
                        ]
                      }
                    ]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "nvidia.com/gpu",
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priorityClassName": "system-cluster-critical",
        "priority": 2000000000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:13Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:10Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:13Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:13Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:10Z"
          }
        ],
        "hostIP": "10.116.0.8",
        "hostIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "podIP": "10.244.0.180",
        "podIPs": [
          {
            "ip": "10.244.0.180"
          }
        ],
        "startTime": "2024-11-16T00:04:10Z",
        "containerStatuses": [
          {
            "name": "coredns",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:13Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/coredns/coredns:1.11.1",
            "imageID": "docker.io/coredns/coredns@sha256:1eeb4c7316bacb1d4c8ead65571cd92dd21e27359f0d4917f1a5822a73b75db1",
            "containerID": "containerd://00f7401648561b3edec09711df731c6965e002a82dd0256e84ea77650337f266",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "cpc-bridge-proxy-fm56z",
        "generateName": "cpc-bridge-proxy-",
        "namespace": "kube-system",
        "uid": "e2e456ad-d4e1-474a-becd-e8d8df174849",
        "resourceVersion": "28981374",
        "creationTimestamp": "2024-11-16T00:03:14Z",
        "labels": {
          "app": "cpc-bridge-proxy",
          "controller-revision-hash": "79d588b66d",
          "doks.digitalocean.com/managed": "true",
          "pod-template-generation": "1"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "resource-requirements"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "cpc-bridge-proxy",
            "uid": "3c628a49-0bbc-4395-a7c8-e9f1088c9536",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:14Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:pod-template-generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"3c628a49-0bbc-4395-a7c8-e9f1088c9536\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"cpc-bridge-proxy\"}": {
                    ".": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/nginx\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostNetwork": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"init-iptables\"}": {
                    ".": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  }
                },
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"cpc-bridge-proxy-config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:32Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.116.0.8\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "cpc-bridge-proxy-config",
            "configMap": {
              "name": "cpc-bridge-proxy-config",
              "defaultMode": 420
            }
          }
        ],
        "initContainers": [
          {
            "name": "init-iptables",
            "image": "digitalocean/cpbridge:1.26.0",
            "command": [
              "/bin/bash",
              "-c",
              "set -o errexit\nset -o pipefail\nset -o nounset\nipt_nat=\"iptables-legacy -t nat\"\n# Avoid racing with kube-proxy on the initial iptables rules population which makes the rule order indeterministic.\nuntil ${ipt_nat} --list KUBE-SERVICES > /dev/null; do echo \"waiting for kube-proxy to populate iptables rules\"; sleep 3; done\nipt_output_args=\"OUTPUT -p tcp -d 10.245.0.1/32 --dport 443 -j DNAT --to-destination 100.65.46.204:16443\"\nipt_prerouting_args=\"PREROUTING -p tcp -d 100.65.46.204 --dport 443 -j DNAT --to-destination 100.65.46.204:16443\"\n${ipt_nat} --check ${ipt_output_args} || ${ipt_nat} --insert ${ipt_output_args}\n${ipt_nat} --check ${ipt_prerouting_args} || ${ipt_nat} --insert ${ipt_prerouting_args}\n"
            ],
            "resources": {},
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_ADMIN"
                ]
              }
            }
          }
        ],
        "containers": [
          {
            "name": "cpc-bridge-proxy",
            "image": "digitalocean/cpbridge:1.26.0",
            "resources": {
              "requests": {
                "cpu": "100m",
                "memory": "75Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "cpc-bridge-proxy-config",
                "readOnly": true,
                "mountPath": "/etc/nginx"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "default",
        "serviceAccount": "default",
        "automountServiceAccountToken": false,
        "nodeName": "mandible-prod-default-pool-grcwr",
        "hostNetwork": true,
        "securityContext": {},
        "imagePullSecrets": [
          {
            "name": "mandible"
          },
          {
            "name": "registry-mandible"
          }
        ],
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwr"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:30Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:30Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:31Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:31Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:14Z"
          }
        ],
        "hostIP": "10.116.0.8",
        "hostIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "podIP": "10.116.0.8",
        "podIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "startTime": "2024-11-16T00:03:14Z",
        "initContainerStatuses": [
          {
            "name": "init-iptables",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:30Z",
                "finishedAt": "2024-11-16T00:03:30Z",
                "containerID": "containerd://cb531db95676d5baa3dd14b7d3306e237723dab262bbcc2b0a260ee8d847f87b"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cpbridge:1.26.0",
            "imageID": "docker.io/digitalocean/cpbridge@sha256:04ad16d1feb5d794dcdf9bc07b8eea26e4b60b72ec7f97c2008b350c5a51b10e",
            "containerID": "containerd://cb531db95676d5baa3dd14b7d3306e237723dab262bbcc2b0a260ee8d847f87b",
            "started": false
          }
        ],
        "containerStatuses": [
          {
            "name": "cpc-bridge-proxy",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:30Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cpbridge:1.26.0",
            "imageID": "docker.io/digitalocean/cpbridge@sha256:04ad16d1feb5d794dcdf9bc07b8eea26e4b60b72ec7f97c2008b350c5a51b10e",
            "containerID": "containerd://cbdcac04ca9de14e9f2a7a739aeffbca9dfd92d2ac1220cafcc23208031fe082",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "cpc-bridge-proxy-rsbpl",
        "generateName": "cpc-bridge-proxy-",
        "namespace": "kube-system",
        "uid": "c58f1b3f-ab2f-4611-815f-79878de0b0a3",
        "resourceVersion": "28981506",
        "creationTimestamp": "2024-11-16T00:03:22Z",
        "labels": {
          "app": "cpc-bridge-proxy",
          "controller-revision-hash": "79d588b66d",
          "doks.digitalocean.com/managed": "true",
          "pod-template-generation": "1"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "resource-requirements"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "cpc-bridge-proxy",
            "uid": "3c628a49-0bbc-4395-a7c8-e9f1088c9536",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:22Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:pod-template-generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"3c628a49-0bbc-4395-a7c8-e9f1088c9536\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"cpc-bridge-proxy\"}": {
                    ".": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/nginx\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostNetwork": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"init-iptables\"}": {
                    ".": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  }
                },
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"cpc-bridge-proxy-config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:45Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.116.0.9\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "cpc-bridge-proxy-config",
            "configMap": {
              "name": "cpc-bridge-proxy-config",
              "defaultMode": 420
            }
          }
        ],
        "initContainers": [
          {
            "name": "init-iptables",
            "image": "digitalocean/cpbridge:1.26.0",
            "command": [
              "/bin/bash",
              "-c",
              "set -o errexit\nset -o pipefail\nset -o nounset\nipt_nat=\"iptables-legacy -t nat\"\n# Avoid racing with kube-proxy on the initial iptables rules population which makes the rule order indeterministic.\nuntil ${ipt_nat} --list KUBE-SERVICES > /dev/null; do echo \"waiting for kube-proxy to populate iptables rules\"; sleep 3; done\nipt_output_args=\"OUTPUT -p tcp -d 10.245.0.1/32 --dport 443 -j DNAT --to-destination 100.65.46.204:16443\"\nipt_prerouting_args=\"PREROUTING -p tcp -d 100.65.46.204 --dport 443 -j DNAT --to-destination 100.65.46.204:16443\"\n${ipt_nat} --check ${ipt_output_args} || ${ipt_nat} --insert ${ipt_output_args}\n${ipt_nat} --check ${ipt_prerouting_args} || ${ipt_nat} --insert ${ipt_prerouting_args}\n"
            ],
            "resources": {},
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "add": [
                  "NET_ADMIN"
                ]
              }
            }
          }
        ],
        "containers": [
          {
            "name": "cpc-bridge-proxy",
            "image": "digitalocean/cpbridge:1.26.0",
            "resources": {
              "requests": {
                "cpu": "100m",
                "memory": "75Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "cpc-bridge-proxy-config",
                "readOnly": true,
                "mountPath": "/etc/nginx"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "default",
        "serviceAccount": "default",
        "automountServiceAccountToken": false,
        "nodeName": "mandible-prod-default-pool-grcwb",
        "hostNetwork": true,
        "securityContext": {},
        "imagePullSecrets": [
          {
            "name": "mandible"
          },
          {
            "name": "registry-mandible"
          }
        ],
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwb"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:43Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:43Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:44Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:44Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:22Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.116.0.9",
        "podIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "startTime": "2024-11-16T00:03:22Z",
        "initContainerStatuses": [
          {
            "name": "init-iptables",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:43Z",
                "finishedAt": "2024-11-16T00:03:43Z",
                "containerID": "containerd://ccaccb44e16988c00b08ac00c7c9153ec4ef34ad2c6e414213e2da58c8e9f517"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cpbridge:1.26.0",
            "imageID": "docker.io/digitalocean/cpbridge@sha256:04ad16d1feb5d794dcdf9bc07b8eea26e4b60b72ec7f97c2008b350c5a51b10e",
            "containerID": "containerd://ccaccb44e16988c00b08ac00c7c9153ec4ef34ad2c6e414213e2da58c8e9f517",
            "started": false
          }
        ],
        "containerStatuses": [
          {
            "name": "cpc-bridge-proxy",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:44Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/cpbridge:1.26.0",
            "imageID": "docker.io/digitalocean/cpbridge@sha256:04ad16d1feb5d794dcdf9bc07b8eea26e4b60b72ec7f97c2008b350c5a51b10e",
            "containerID": "containerd://bdaa6086ca186dea855cd8f06fc1cea0f5584732789476c7daa81496d3031117",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "csi-do-node-s6ksq",
        "generateName": "csi-do-node-",
        "namespace": "kube-system",
        "uid": "266fb84f-f2da-460a-9504-9b8ab5b76fb4",
        "resourceVersion": "28981345",
        "creationTimestamp": "2024-11-16T00:03:14Z",
        "labels": {
          "app": "csi-do-node",
          "controller-revision-hash": "78474795f",
          "doks.digitalocean.com/managed": "true",
          "pod-template-generation": "2",
          "role": "csi-do"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "privileged-containers,non-root-user,resource-requirements,hostpath-volume",
          "kubectl.kubernetes.io/default-container": "csi-do-plugin"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "csi-do-node",
            "uid": "4d2f4e52-a43d-4e39-8ff3-3d39cc96af70",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:14Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {},
                  "f:kubectl.kubernetes.io/default-container": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:pod-template-generation": {},
                  "f:role": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"4d2f4e52-a43d-4e39-8ff3-3d39cc96af70\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"csi-do-plugin\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"CSI_ENDPOINT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {}
                      },
                      "f:privileged": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/csi\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/dev\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/var/lib/kubelet\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:mountPropagation": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"csi-node-driver-registrar\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"DRIVER_REG_SOCK_PATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"KUBE_NODE_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {
                      ".": {},
                      "f:preStop": {
                        ".": {},
                        "f:exec": {
                          ".": {},
                          "f:command": {}
                        }
                      }
                    },
                    "f:name": {},
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/csi/\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/registration/\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostNetwork": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"device-dir\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"plugin-dir\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"pods-mount-dir\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"registration-dir\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:29Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.116.0.8\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "registration-dir",
            "hostPath": {
              "path": "/var/lib/kubelet/plugins_registry/",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "plugin-dir",
            "hostPath": {
              "path": "/var/lib/kubelet/plugins/dobs.csi.digitalocean.com",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "pods-mount-dir",
            "hostPath": {
              "path": "/var/lib/kubelet",
              "type": "Directory"
            }
          },
          {
            "name": "device-dir",
            "hostPath": {
              "path": "/dev",
              "type": ""
            }
          },
          {
            "name": "kube-api-access-cv4hj",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "csi-node-driver-registrar",
            "image": "registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.10.1",
            "args": [
              "--v=5",
              "--csi-address=$(ADDRESS)",
              "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
            ],
            "env": [
              {
                "name": "ADDRESS",
                "value": "/csi/csi.sock"
              },
              {
                "name": "DRIVER_REG_SOCK_PATH",
                "value": "/var/lib/kubelet/plugins/dobs.csi.digitalocean.com/csi.sock"
              },
              {
                "name": "KUBE_NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "plugin-dir",
                "mountPath": "/csi/"
              },
              {
                "name": "registration-dir",
                "mountPath": "/registration/"
              },
              {
                "name": "kube-api-access-cv4hj",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "lifecycle": {
              "preStop": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "rm -rf /registration/dobs.csi.digitalocean.com /registration/dobs.csi.digitalocean.com-reg.sock"
                  ]
                }
              }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          },
          {
            "name": "csi-do-plugin",
            "image": "docker.io/digitalocean/do-csi-plugin:v4.11.0",
            "args": [
              "--endpoint=$(CSI_ENDPOINT)",
              "--validate-attachment=true",
              "--volume-limit=15",
              "--url=https://api.digitalocean.com",
              "--driver-name=dobs.csi.digitalocean.com"
            ],
            "env": [
              {
                "name": "CSI_ENDPOINT",
                "value": "unix:///csi/csi.sock"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "plugin-dir",
                "mountPath": "/csi"
              },
              {
                "name": "pods-mount-dir",
                "mountPath": "/var/lib/kubelet",
                "mountPropagation": "Bidirectional"
              },
              {
                "name": "device-dir",
                "mountPath": "/dev"
              },
              {
                "name": "kube-api-access-cv4hj",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "Always",
            "securityContext": {
              "capabilities": {
                "add": [
                  "SYS_ADMIN"
                ]
              },
              "privileged": true,
              "allowPrivilegeEscalation": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "csi-do-node-sa",
        "serviceAccount": "csi-do-node-sa",
        "nodeName": "mandible-prod-default-pool-grcwr",
        "hostNetwork": true,
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwr"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:28Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:14Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:28Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:28Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:14Z"
          }
        ],
        "hostIP": "10.116.0.8",
        "hostIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "podIP": "10.116.0.8",
        "podIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "startTime": "2024-11-16T00:03:14Z",
        "containerStatuses": [
          {
            "name": "csi-do-plugin",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:28Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/do-csi-plugin:v4.11.0",
            "imageID": "docker.io/digitalocean/do-csi-plugin@sha256:308ed578f2f94d982a0023db326dd9adeededf73a80736c06219235e3b1a8113",
            "containerID": "containerd://72fb26bcc156a7b17f057991da5f16322941eb5411643403b3e87949a547a8d0",
            "started": true
          },
          {
            "name": "csi-node-driver-registrar",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:22Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.10.1",
            "imageID": "registry.k8s.io/sig-storage/csi-node-driver-registrar@sha256:f25af73ee708ff9c82595ae99493cdef9295bd96953366cddf36305f82555dac",
            "containerID": "containerd://db3a83842f2ac41e6fb79eb428825edde351da9ff670110a8c68a6ebb18cbadd",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "csi-do-node-xbf66",
        "generateName": "csi-do-node-",
        "namespace": "kube-system",
        "uid": "27202d61-1eee-4e2b-8f69-9d12fd338752",
        "resourceVersion": "28981459",
        "creationTimestamp": "2024-11-16T00:03:22Z",
        "labels": {
          "app": "csi-do-node",
          "controller-revision-hash": "78474795f",
          "doks.digitalocean.com/managed": "true",
          "pod-template-generation": "2",
          "role": "csi-do"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "privileged-containers,non-root-user,resource-requirements,hostpath-volume",
          "kubectl.kubernetes.io/default-container": "csi-do-plugin"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "csi-do-node",
            "uid": "4d2f4e52-a43d-4e39-8ff3-3d39cc96af70",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:22Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {},
                  "f:kubectl.kubernetes.io/default-container": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:pod-template-generation": {},
                  "f:role": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"4d2f4e52-a43d-4e39-8ff3-3d39cc96af70\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"csi-do-plugin\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"CSI_ENDPOINT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:allowPrivilegeEscalation": {},
                      "f:capabilities": {
                        ".": {},
                        "f:add": {}
                      },
                      "f:privileged": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/csi\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/dev\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/var/lib/kubelet\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:mountPropagation": {},
                        "f:name": {}
                      }
                    }
                  },
                  "k:{\"name\":\"csi-node-driver-registrar\"}": {
                    ".": {},
                    "f:args": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"ADDRESS\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"DRIVER_REG_SOCK_PATH\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"KUBE_NODE_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:lifecycle": {
                      ".": {},
                      "f:preStop": {
                        ".": {},
                        "f:exec": {
                          ".": {},
                          "f:command": {}
                        }
                      }
                    },
                    "f:name": {},
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/csi/\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/registration/\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostNetwork": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"device-dir\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"plugin-dir\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"pods-mount-dir\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"registration-dir\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:41Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.116.0.9\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "registration-dir",
            "hostPath": {
              "path": "/var/lib/kubelet/plugins_registry/",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "plugin-dir",
            "hostPath": {
              "path": "/var/lib/kubelet/plugins/dobs.csi.digitalocean.com",
              "type": "DirectoryOrCreate"
            }
          },
          {
            "name": "pods-mount-dir",
            "hostPath": {
              "path": "/var/lib/kubelet",
              "type": "Directory"
            }
          },
          {
            "name": "device-dir",
            "hostPath": {
              "path": "/dev",
              "type": ""
            }
          },
          {
            "name": "kube-api-access-5689z",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "csi-node-driver-registrar",
            "image": "registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.10.1",
            "args": [
              "--v=5",
              "--csi-address=$(ADDRESS)",
              "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
            ],
            "env": [
              {
                "name": "ADDRESS",
                "value": "/csi/csi.sock"
              },
              {
                "name": "DRIVER_REG_SOCK_PATH",
                "value": "/var/lib/kubelet/plugins/dobs.csi.digitalocean.com/csi.sock"
              },
              {
                "name": "KUBE_NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "plugin-dir",
                "mountPath": "/csi/"
              },
              {
                "name": "registration-dir",
                "mountPath": "/registration/"
              },
              {
                "name": "kube-api-access-5689z",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "lifecycle": {
              "preStop": {
                "exec": {
                  "command": [
                    "/bin/sh",
                    "-c",
                    "rm -rf /registration/dobs.csi.digitalocean.com /registration/dobs.csi.digitalocean.com-reg.sock"
                  ]
                }
              }
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          },
          {
            "name": "csi-do-plugin",
            "image": "docker.io/digitalocean/do-csi-plugin:v4.11.0",
            "args": [
              "--endpoint=$(CSI_ENDPOINT)",
              "--validate-attachment=true",
              "--volume-limit=15",
              "--url=https://api.digitalocean.com",
              "--driver-name=dobs.csi.digitalocean.com"
            ],
            "env": [
              {
                "name": "CSI_ENDPOINT",
                "value": "unix:///csi/csi.sock"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "plugin-dir",
                "mountPath": "/csi"
              },
              {
                "name": "pods-mount-dir",
                "mountPath": "/var/lib/kubelet",
                "mountPropagation": "Bidirectional"
              },
              {
                "name": "device-dir",
                "mountPath": "/dev"
              },
              {
                "name": "kube-api-access-5689z",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "Always",
            "securityContext": {
              "capabilities": {
                "add": [
                  "SYS_ADMIN"
                ]
              },
              "privileged": true,
              "allowPrivilegeEscalation": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "csi-do-node-sa",
        "serviceAccount": "csi-do-node-sa",
        "nodeName": "mandible-prod-default-pool-grcwb",
        "hostNetwork": true,
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwb"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:40Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:22Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:40Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:40Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:22Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.116.0.9",
        "podIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "startTime": "2024-11-16T00:03:22Z",
        "containerStatuses": [
          {
            "name": "csi-do-plugin",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:40Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/do-csi-plugin:v4.11.0",
            "imageID": "docker.io/digitalocean/do-csi-plugin@sha256:308ed578f2f94d982a0023db326dd9adeededf73a80736c06219235e3b1a8113",
            "containerID": "containerd://6937138b103fe617b4cb8f4bf3879283a014eda81fba0352bed1ea44880538e4",
            "started": true
          },
          {
            "name": "csi-node-driver-registrar",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:33Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.10.1",
            "imageID": "registry.k8s.io/sig-storage/csi-node-driver-registrar@sha256:f25af73ee708ff9c82595ae99493cdef9295bd96953366cddf36305f82555dac",
            "containerID": "containerd://a2608fadba8d049e318d0ce5bd885eb362139acbe10ab1afb57c5b59e560effb",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "do-node-agent-ctmrb",
        "generateName": "do-node-agent-",
        "namespace": "kube-system",
        "uid": "8c2d8650-7a00-43c6-acc7-699e25ae4a30",
        "resourceVersion": "28981680",
        "creationTimestamp": "2024-11-16T00:03:22Z",
        "labels": {
          "app": "do-node-agent",
          "controller-revision-hash": "54c5fcd8ff",
          "doks.digitalocean.com/managed": "true",
          "pod-template-generation": "2"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "resource-requirements,hostpath-volume"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "do-node-agent",
            "uid": "dbec9e77-354a-4f68-8512-b443ea6d6993",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:22Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:pod-template-generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"dbec9e77-354a-4f68-8512-b443ea6d6993\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"do-node-agent\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:limits": {
                        ".": {},
                        "f:memory": {}
                      },
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/host/proc\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/host/root\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:mountPropagation": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/host/sys\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostNetwork": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"dynamic-config\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"NODE_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/host/usr/bin/kubectl\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:runAsNonRoot": {},
                  "f:runAsUser": {}
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"dynamic-config\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"host-kubectl\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"proc\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"root\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"sys\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:06Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.116.0.9\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "proc",
            "hostPath": {
              "path": "/proc",
              "type": ""
            }
          },
          {
            "name": "sys",
            "hostPath": {
              "path": "/sys",
              "type": ""
            }
          },
          {
            "name": "root",
            "hostPath": {
              "path": "/",
              "type": ""
            }
          },
          {
            "name": "dynamic-config",
            "emptyDir": {}
          },
          {
            "name": "host-kubectl",
            "hostPath": {
              "path": "/usr/bin/kubectl",
              "type": "File"
            }
          },
          {
            "name": "kube-api-access-k8v7f",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "initContainers": [
          {
            "name": "dynamic-config",
            "image": "gcr.io/distroless/static-debian12:debug-nonroot-amd64",
            "command": [
              "sh",
              "-c",
              "set -o errexit\nset -o pipefail\nset -o nounset\n\nKUBECTL=/host/usr/bin/kubectl\nPOOL_ID=\"$(${KUBECTL} get node ${NODE_NAME} -o jsonpath='{.metadata.labels.doks\\.digitalocean\\.com/node-pool-id}')\"\n[[ -z \"${POOL_ID}\" ]] && echo \"Pool ID label missing\" && exit 1\necho \"--additional-label=kubernetes_node_pool_uuid:${POOL_ID}\" > /etc/config/do-agent-config\necho \"Pool ID configured: ${POOL_ID}\"\n"
            ],
            "env": [
              {
                "name": "NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "dynamic-config",
                "mountPath": "/etc/config"
              },
              {
                "name": "host-kubectl",
                "mountPath": "/host/usr/bin/kubectl"
              },
              {
                "name": "kube-api-access-k8v7f",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "containers": [
          {
            "name": "do-node-agent",
            "image": "docker.io/digitalocean/do-agent:3.16.9",
            "command": [
              "/bin/do-agent"
            ],
            "args": [
              "@/etc/config/do-agent-config",
              "--path.procfs=/host/proc",
              "--path.sysfs=/host/sys",
              "--k8s-metrics-path=http://kube-state-metrics.kube-system.svc.cluster.local:8080/metrics",
              "--additional-label=kubernetes_cluster_uuid:80451730-d6e7-4a56-a103-5a78d1f55b1b"
            ],
            "resources": {
              "limits": {
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "102m",
                "memory": "80Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "proc",
                "readOnly": true,
                "mountPath": "/host/proc"
              },
              {
                "name": "sys",
                "readOnly": true,
                "mountPath": "/host/sys"
              },
              {
                "name": "root",
                "readOnly": true,
                "mountPath": "/host/root",
                "mountPropagation": "HostToContainer"
              },
              {
                "name": "dynamic-config",
                "mountPath": "/etc/config"
              },
              {
                "name": "kube-api-access-k8v7f",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirstWithHostNet",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "do-agent",
        "serviceAccount": "do-agent",
        "nodeName": "mandible-prod-default-pool-grcwb",
        "hostNetwork": true,
        "securityContext": {
          "runAsUser": 65534,
          "runAsNonRoot": true
        },
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwb"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:32Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:03Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:06Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:06Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:22Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.116.0.9",
        "podIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "startTime": "2024-11-16T00:03:22Z",
        "initContainerStatuses": [
          {
            "name": "dynamic-config",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:32Z",
                "finishedAt": "2024-11-16T00:04:03Z",
                "containerID": "containerd://d595a0efb0aded6de1e8d0fc461bdd1c9da93502523c61e323749ed7796d39bf"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "gcr.io/distroless/static-debian12:debug-nonroot-amd64",
            "imageID": "gcr.io/distroless/static-debian12@sha256:0b6217d275396204e13e9f4798715decb0ff0a210ab70a128acdd9d1c2fc6bd6",
            "containerID": "containerd://d595a0efb0aded6de1e8d0fc461bdd1c9da93502523c61e323749ed7796d39bf",
            "started": false
          }
        ],
        "containerStatuses": [
          {
            "name": "do-node-agent",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:05Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/do-agent:3.16.9",
            "imageID": "docker.io/digitalocean/do-agent@sha256:19b2340bcebf70627c498ecee3e846b47dc1f4570e106555473d21907629587e",
            "containerID": "containerd://3892412cadf66e0876630e3af4af8031221d933f5f5cd7d4cc0a0924aec3c534",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "do-node-agent-xv5m4",
        "generateName": "do-node-agent-",
        "namespace": "kube-system",
        "uid": "eeab703b-581e-4a01-946e-6cb7247855fd",
        "resourceVersion": "28981596",
        "creationTimestamp": "2024-11-16T00:03:14Z",
        "labels": {
          "app": "do-node-agent",
          "controller-revision-hash": "54c5fcd8ff",
          "doks.digitalocean.com/managed": "true",
          "pod-template-generation": "2"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "resource-requirements,hostpath-volume"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "do-node-agent",
            "uid": "dbec9e77-354a-4f68-8512-b443ea6d6993",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:14Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:pod-template-generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"dbec9e77-354a-4f68-8512-b443ea6d6993\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"do-node-agent\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:limits": {
                        ".": {},
                        "f:memory": {}
                      },
                      "f:requests": {
                        ".": {},
                        "f:cpu": {},
                        "f:memory": {}
                      }
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/host/proc\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/host/root\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:mountPropagation": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/host/sys\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostNetwork": {},
                "f:initContainers": {
                  ".": {},
                  "k:{\"name\":\"dynamic-config\"}": {
                    ".": {},
                    "f:command": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"NODE_NAME\"}": {
                        ".": {},
                        "f:name": {},
                        "f:valueFrom": {
                          ".": {},
                          "f:fieldRef": {}
                        }
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      },
                      "k:{\"mountPath\":\"/host/usr/bin/kubectl\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:nodeSelector": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:runAsNonRoot": {},
                  "f:runAsUser": {}
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"dynamic-config\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  },
                  "k:{\"name\":\"host-kubectl\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"proc\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"root\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"sys\"}": {
                    ".": {},
                    "f:hostPath": {
                      ".": {},
                      "f:path": {},
                      "f:type": {}
                    },
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:54Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:initContainerStatuses": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.116.0.8\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "proc",
            "hostPath": {
              "path": "/proc",
              "type": ""
            }
          },
          {
            "name": "sys",
            "hostPath": {
              "path": "/sys",
              "type": ""
            }
          },
          {
            "name": "root",
            "hostPath": {
              "path": "/",
              "type": ""
            }
          },
          {
            "name": "dynamic-config",
            "emptyDir": {}
          },
          {
            "name": "host-kubectl",
            "hostPath": {
              "path": "/usr/bin/kubectl",
              "type": "File"
            }
          },
          {
            "name": "kube-api-access-htrdt",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "initContainers": [
          {
            "name": "dynamic-config",
            "image": "gcr.io/distroless/static-debian12:debug-nonroot-amd64",
            "command": [
              "sh",
              "-c",
              "set -o errexit\nset -o pipefail\nset -o nounset\n\nKUBECTL=/host/usr/bin/kubectl\nPOOL_ID=\"$(${KUBECTL} get node ${NODE_NAME} -o jsonpath='{.metadata.labels.doks\\.digitalocean\\.com/node-pool-id}')\"\n[[ -z \"${POOL_ID}\" ]] && echo \"Pool ID label missing\" && exit 1\necho \"--additional-label=kubernetes_node_pool_uuid:${POOL_ID}\" > /etc/config/do-agent-config\necho \"Pool ID configured: ${POOL_ID}\"\n"
            ],
            "env": [
              {
                "name": "NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "dynamic-config",
                "mountPath": "/etc/config"
              },
              {
                "name": "host-kubectl",
                "mountPath": "/host/usr/bin/kubectl"
              },
              {
                "name": "kube-api-access-htrdt",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "containers": [
          {
            "name": "do-node-agent",
            "image": "docker.io/digitalocean/do-agent:3.16.9",
            "command": [
              "/bin/do-agent"
            ],
            "args": [
              "@/etc/config/do-agent-config",
              "--path.procfs=/host/proc",
              "--path.sysfs=/host/sys",
              "--k8s-metrics-path=http://kube-state-metrics.kube-system.svc.cluster.local:8080/metrics",
              "--additional-label=kubernetes_cluster_uuid:80451730-d6e7-4a56-a103-5a78d1f55b1b"
            ],
            "resources": {
              "limits": {
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "102m",
                "memory": "80Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "proc",
                "readOnly": true,
                "mountPath": "/host/proc"
              },
              {
                "name": "sys",
                "readOnly": true,
                "mountPath": "/host/sys"
              },
              {
                "name": "root",
                "readOnly": true,
                "mountPath": "/host/root",
                "mountPropagation": "HostToContainer"
              },
              {
                "name": "dynamic-config",
                "mountPath": "/etc/config"
              },
              {
                "name": "kube-api-access-htrdt",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirstWithHostNet",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "do-agent",
        "serviceAccount": "do-agent",
        "nodeName": "mandible-prod-default-pool-grcwr",
        "hostNetwork": true,
        "securityContext": {
          "runAsUser": 65534,
          "runAsNonRoot": true
        },
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwr"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:21Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:52Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:54Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:54Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:14Z"
          }
        ],
        "hostIP": "10.116.0.8",
        "hostIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "podIP": "10.116.0.8",
        "podIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "startTime": "2024-11-16T00:03:14Z",
        "initContainerStatuses": [
          {
            "name": "dynamic-config",
            "state": {
              "terminated": {
                "exitCode": 0,
                "reason": "Completed",
                "startedAt": "2024-11-16T00:03:21Z",
                "finishedAt": "2024-11-16T00:03:52Z",
                "containerID": "containerd://9d4f1c674892a5d690c52dd241da82ae97cd445a6980801f7f10ca5d1f31cd69"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "gcr.io/distroless/static-debian12:debug-nonroot-amd64",
            "imageID": "gcr.io/distroless/static-debian12@sha256:0b6217d275396204e13e9f4798715decb0ff0a210ab70a128acdd9d1c2fc6bd6",
            "containerID": "containerd://9d4f1c674892a5d690c52dd241da82ae97cd445a6980801f7f10ca5d1f31cd69",
            "started": false
          }
        ],
        "containerStatuses": [
          {
            "name": "do-node-agent",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:54Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "docker.io/digitalocean/do-agent:3.16.9",
            "imageID": "docker.io/digitalocean/do-agent@sha256:19b2340bcebf70627c498ecee3e846b47dc1f4570e106555473d21907629587e",
            "containerID": "containerd://c0d3351247a32d888f798f59aa2430ed180209a9c86f1506f118220687cfa360",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "hubble-relay-67bdb9796c-p566n",
        "generateName": "hubble-relay-67bdb9796c-",
        "namespace": "kube-system",
        "uid": "4d651537-7245-475d-ada2-be8ebe352949",
        "resourceVersion": "28981944",
        "creationTimestamp": "2024-11-16T00:04:11Z",
        "labels": {
          "app.kubernetes.io/name": "hubble-relay",
          "app.kubernetes.io/part-of": "cilium",
          "doks.digitalocean.com/managed": "true",
          "k8s-app": "hubble-relay",
          "pod-template-hash": "67bdb9796c"
        },
        "annotations": {
          "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
          "clusterlint.digitalocean.com/disabled-checks": "resource-requirements"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "hubble-relay-67bdb9796c",
            "uid": "b4448bfd-4f9d-4491-b684-234015f5be3a",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:11Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:cluster-autoscaler.kubernetes.io/safe-to-evict": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:k8s-app": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"b4448bfd-4f9d-4491-b684-234015f5be3a\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  },
                  "f:podAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"hubble-relay\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:tcpSocket": {
                        ".": {},
                        "f:port": {}
                      },
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":4245,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:readinessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:tcpSocket": {
                        ".": {},
                        "f:port": {}
                      },
                      "f:timeoutSeconds": {}
                    },
                    "f:resources": {},
                    "f:securityContext": {
                      ".": {},
                      "f:capabilities": {
                        ".": {},
                        "f:drop": {}
                      },
                      "f:runAsGroup": {},
                      "f:runAsNonRoot": {},
                      "f:runAsUser": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/hubble-relay\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/var/lib/hubble-relay/tls\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {
                  ".": {},
                  "f:fsGroup": {}
                },
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:items": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tls\"}": {
                    ".": {},
                    "f:name": {},
                    "f:projected": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:sources": {}
                    }
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:16Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.0.254\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "config",
            "configMap": {
              "name": "hubble-relay-config",
              "items": [
                {
                  "key": "config.yaml",
                  "path": "config.yaml"
                }
              ],
              "defaultMode": 420
            }
          },
          {
            "name": "tls",
            "projected": {
              "sources": [
                {
                  "secret": {
                    "name": "hubble-relay-client-certs",
                    "items": [
                      {
                        "key": "tls.crt",
                        "path": "client.crt"
                      },
                      {
                        "key": "tls.key",
                        "path": "client.key"
                      },
                      {
                        "key": "ca.crt",
                        "path": "hubble-server-ca.crt"
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 256
            }
          }
        ],
        "containers": [
          {
            "name": "hubble-relay",
            "image": "quay.io/cilium/hubble-relay:v1.14.10@sha256:c156c4fc2da520d2876142ea17490440b95431a1be755d2050e72115a495cfd0",
            "command": [
              "hubble-relay"
            ],
            "args": [
              "serve"
            ],
            "ports": [
              {
                "name": "grpc",
                "containerPort": 4245,
                "protocol": "TCP"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "config",
                "readOnly": true,
                "mountPath": "/etc/hubble-relay"
              },
              {
                "name": "tls",
                "readOnly": true,
                "mountPath": "/var/lib/hubble-relay/tls"
              }
            ],
            "livenessProbe": {
              "tcpSocket": {
                "port": "grpc"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "tcpSocket": {
                "port": "grpc"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "capabilities": {
                "drop": [
                  "ALL"
                ]
              },
              "runAsUser": 65532,
              "runAsGroup": 65532,
              "runAsNonRoot": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 1,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "hubble-relay",
        "serviceAccount": "hubble-relay",
        "automountServiceAccountToken": false,
        "nodeName": "mandible-prod-default-pool-grcwr",
        "securityContext": {
          "fsGroup": 65532
        },
        "affinity": {
          "nodeAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 100,
                "preference": {
                  "matchExpressions": [
                    {
                      "key": "doks.digitalocean.com/gpu-brand",
                      "operator": "DoesNotExist"
                    }
                  ]
                }
              }
            ]
          },
          "podAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": [
              {
                "labelSelector": {
                  "matchLabels": {
                    "k8s-app": "cilium"
                  }
                },
                "topologyKey": "kubernetes.io/hostname"
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "nvidia.com/gpu",
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:16Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:11Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:16Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:16Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:11Z"
          }
        ],
        "hostIP": "10.116.0.8",
        "hostIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "podIP": "10.244.0.254",
        "podIPs": [
          {
            "ip": "10.244.0.254"
          }
        ],
        "startTime": "2024-11-16T00:04:11Z",
        "containerStatuses": [
          {
            "name": "hubble-relay",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:15Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "sha256:c1c3c23052b596a196bafdde792de08748eb9d634c3a9fd75f3d8264d8b7ced9",
            "imageID": "quay.io/cilium/hubble-relay@sha256:c156c4fc2da520d2876142ea17490440b95431a1be755d2050e72115a495cfd0",
            "containerID": "containerd://d667cac341c90c012887d2dd1a293a7139ceabda1d174abd6b3f1b43f370bed8",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "hubble-ui-69556cbcbc-drrb7",
        "generateName": "hubble-ui-69556cbcbc-",
        "namespace": "kube-system",
        "uid": "6487358c-a7c8-424b-a2dd-91a7bc0f4979",
        "resourceVersion": "28982089",
        "creationTimestamp": "2024-11-16T00:04:10Z",
        "labels": {
          "app.kubernetes.io/name": "hubble-ui",
          "app.kubernetes.io/part-of": "cilium",
          "doks.digitalocean.com/managed": "true",
          "k8s-app": "hubble-ui",
          "pod-template-hash": "69556cbcbc"
        },
        "annotations": {
          "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
          "clusterlint.digitalocean.com/disabled-checks": "resource-requirements"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "ReplicaSet",
            "name": "hubble-ui-69556cbcbc",
            "uid": "1958a79d-d908-49fb-87d1-f6efba3e388e",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:10Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:cluster-autoscaler.kubernetes.io/safe-to-evict": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:app.kubernetes.io/name": {},
                  "f:app.kubernetes.io/part-of": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:k8s-app": {},
                  "f:pod-template-hash": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"1958a79d-d908-49fb-87d1-f6efba3e388e\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:preferredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:automountServiceAccountToken": {},
                "f:containers": {
                  "k:{\"name\":\"backend\"}": {
                    ".": {},
                    "f:env": {
                      ".": {},
                      "k:{\"name\":\"EVENTS_SERVER_PORT\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      },
                      "k:{\"name\":\"FLOWS_API_ADDR\"}": {
                        ".": {},
                        "f:name": {},
                        "f:value": {}
                      }
                    },
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8090,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {}
                  },
                  "k:{\"name\":\"frontend\"}": {
                    ".": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:ports": {
                      ".": {},
                      "k:{\"containerPort\":8081,\"protocol\":\"TCP\"}": {
                        ".": {},
                        "f:containerPort": {},
                        "f:name": {},
                        "f:protocol": {}
                      }
                    },
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/nginx/conf.d/default.conf\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:subPath": {}
                      },
                      "k:{\"mountPath\":\"/tmp\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:nodeSelector": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"hubble-ui-nginx-conf\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"tmp-dir\"}": {
                    ".": {},
                    "f:emptyDir": {},
                    "f:name": {}
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:33Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.1.61\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "hubble-ui-nginx-conf",
            "configMap": {
              "name": "hubble-ui-nginx",
              "defaultMode": 420
            }
          },
          {
            "name": "tmp-dir",
            "emptyDir": {}
          },
          {
            "name": "kube-api-access-2p7v2",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "frontend",
            "image": "quay.io/cilium/hubble-ui:v0.13.0@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666",
            "ports": [
              {
                "name": "http",
                "containerPort": 8081,
                "protocol": "TCP"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "hubble-ui-nginx-conf",
                "mountPath": "/etc/nginx/conf.d/default.conf",
                "subPath": "nginx.conf"
              },
              {
                "name": "tmp-dir",
                "mountPath": "/tmp"
              },
              {
                "name": "kube-api-access-2p7v2",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent"
          },
          {
            "name": "backend",
            "image": "quay.io/cilium/hubble-ui-backend:v0.13.0@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803",
            "ports": [
              {
                "name": "grpc",
                "containerPort": 8090,
                "protocol": "TCP"
              }
            ],
            "env": [
              {
                "name": "EVENTS_SERVER_PORT",
                "value": "8090"
              },
              {
                "name": "FLOWS_API_ADDR",
                "value": "hubble-relay:80"
              }
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "kube-api-access-2p7v2",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "FallbackToLogsOnError",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "nodeSelector": {
          "kubernetes.io/os": "linux"
        },
        "serviceAccountName": "hubble-ui",
        "serviceAccount": "hubble-ui",
        "automountServiceAccountToken": true,
        "nodeName": "mandible-prod-default-pool-grcwb",
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "preferredDuringSchedulingIgnoredDuringExecution": [
              {
                "weight": 100,
                "preference": {
                  "matchExpressions": [
                    {
                      "key": "doks.digitalocean.com/gpu-brand",
                      "operator": "DoesNotExist"
                    }
                  ]
                }
              }
            ]
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "key": "nvidia.com/gpu",
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute",
            "tolerationSeconds": 300
          }
        ],
        "priority": 0,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:33Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:10Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:33Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:33Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:10Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.244.1.61",
        "podIPs": [
          {
            "ip": "10.244.1.61"
          }
        ],
        "startTime": "2024-11-16T00:04:10Z",
        "containerStatuses": [
          {
            "name": "backend",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:33Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "sha256:1ea21544e094404b724cc15293af153f44149b5b081f32d4d43967b88bc98b3f",
            "imageID": "quay.io/cilium/hubble-ui-backend@sha256:1e7657d997c5a48253bb8dc91ecee75b63018d16ff5e5797e5af367336bc8803",
            "containerID": "containerd://a629b2e04543de1629d8d40cdfb4b59f6528d657f5fc6cf59d6e72d3dc357302",
            "started": true
          },
          {
            "name": "frontend",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:20Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "sha256:78000f56b0cffca17d887126b1f52527f6c5e8104e3dd5ac8344a29c4ae38713",
            "imageID": "quay.io/cilium/hubble-ui@sha256:7d663dc16538dd6e29061abd1047013a645e6e69c115e008bee9ea9fef9a6666",
            "containerID": "containerd://5b91a7b1c058135c53bbfac7ed963798f904ab096c94326e7a9cc1a2390d6f44",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "konnectivity-agent-kwvc7",
        "generateName": "konnectivity-agent-",
        "namespace": "kube-system",
        "uid": "3b447d19-2a05-44e2-88b7-3c78d6aaef85",
        "resourceVersion": "28981549",
        "creationTimestamp": "2024-11-16T00:03:14Z",
        "labels": {
          "controller-revision-hash": "bcf48dcc5",
          "doks.digitalocean.com/managed": "true",
          "k8s-app": "konnectivity-agent",
          "pod-template-generation": "2"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "resource-requirements"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "konnectivity-agent",
            "uid": "35711396-dc56-42c6-981b-84df6c81a2c9",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:14Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:k8s-app": {},
                  "f:pod-template-generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"35711396-dc56-42c6-981b-84df6c81a2c9\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"konnectivity-agent\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/var/run/secrets/tokens\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"konnectivity-agent-token\"}": {
                    ".": {},
                    "f:name": {},
                    "f:projected": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:sources": {}
                    }
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:49Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.0.133\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "konnectivity-agent-token",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "audience": "system:konnectivity-server",
                    "expirationSeconds": 3600,
                    "path": "konnectivity-agent-token"
                  }
                }
              ],
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-mfwr4",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "konnectivity-agent",
            "image": "registry.k8s.io/kas-network-proxy/proxy-agent:v0.30.2",
            "command": [
              "/proxy-agent"
            ],
            "args": [
              "--logtostderr=true",
              "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
              "--proxy-server-port=8132",
              "--admin-server-port=8133",
              "--health-server-port=8134",
              "--keepalive-time=5m",
              "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
              "--proxy-server-host=80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com"
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "konnectivity-agent-token",
                "mountPath": "/var/run/secrets/tokens"
              },
              {
                "name": "kube-api-access-mfwr4",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 8134,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 15,
              "timeoutSeconds": 15,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "Default",
        "serviceAccountName": "konnectivity-agent",
        "serviceAccount": "konnectivity-agent",
        "nodeName": "mandible-prod-default-pool-grcwr",
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwr"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-cluster-critical",
        "priority": 2000000000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:49Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:14Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:49Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:49Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:14Z"
          }
        ],
        "hostIP": "10.116.0.8",
        "hostIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "podIP": "10.244.0.133",
        "podIPs": [
          {
            "ip": "10.244.0.133"
          }
        ],
        "startTime": "2024-11-16T00:03:14Z",
        "containerStatuses": [
          {
            "name": "konnectivity-agent",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:49Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "registry.k8s.io/kas-network-proxy/proxy-agent:v0.30.2",
            "imageID": "registry.k8s.io/kas-network-proxy/proxy-agent@sha256:9a44a615d53d20d1ea5dbf407a65146e2a5263dd039b48e7f238b60ce063d3eb",
            "containerID": "containerd://b9e1bf8a064ef33fd8fc9105b1d7f591071d6cba29c4e36a472d109e951148cb",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "konnectivity-agent-td4tl",
        "generateName": "konnectivity-agent-",
        "namespace": "kube-system",
        "uid": "d3ff5c6f-f8cd-48e5-8ece-29f678eb0b45",
        "resourceVersion": "28981671",
        "creationTimestamp": "2024-11-16T00:03:22Z",
        "labels": {
          "controller-revision-hash": "bcf48dcc5",
          "doks.digitalocean.com/managed": "true",
          "k8s-app": "konnectivity-agent",
          "pod-template-generation": "2"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "resource-requirements"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "konnectivity-agent",
            "uid": "35711396-dc56-42c6-981b-84df6c81a2c9",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:22Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:k8s-app": {},
                  "f:pod-template-generation": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"35711396-dc56-42c6-981b-84df6c81a2c9\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"konnectivity-agent\"}": {
                    ".": {},
                    "f:args": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:livenessProbe": {
                      ".": {},
                      "f:failureThreshold": {},
                      "f:httpGet": {
                        ".": {},
                        "f:path": {},
                        "f:port": {},
                        "f:scheme": {}
                      },
                      "f:initialDelaySeconds": {},
                      "f:periodSeconds": {},
                      "f:successThreshold": {},
                      "f:timeoutSeconds": {}
                    },
                    "f:name": {},
                    "f:resources": {},
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/var/run/secrets/tokens\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"konnectivity-agent-token\"}": {
                    ".": {},
                    "f:name": {},
                    "f:projected": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:sources": {}
                    }
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:04:05Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.244.1.35\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "konnectivity-agent-token",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "audience": "system:konnectivity-server",
                    "expirationSeconds": 3600,
                    "path": "konnectivity-agent-token"
                  }
                }
              ],
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-5l27t",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "konnectivity-agent",
            "image": "registry.k8s.io/kas-network-proxy/proxy-agent:v0.30.2",
            "command": [
              "/proxy-agent"
            ],
            "args": [
              "--logtostderr=true",
              "--ca-cert=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
              "--proxy-server-port=8132",
              "--admin-server-port=8133",
              "--health-server-port=8134",
              "--keepalive-time=5m",
              "--service-account-token-path=/var/run/secrets/tokens/konnectivity-agent-token",
              "--proxy-server-host=80451730-d6e7-4a56-a103-5a78d1f55b1b.k8s.ondigitalocean.com"
            ],
            "resources": {},
            "volumeMounts": [
              {
                "name": "konnectivity-agent-token",
                "mountPath": "/var/run/secrets/tokens"
              },
              {
                "name": "kube-api-access-5l27t",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "livenessProbe": {
              "httpGet": {
                "path": "/healthz",
                "port": 8134,
                "scheme": "HTTP"
              },
              "initialDelaySeconds": 15,
              "timeoutSeconds": 15,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent"
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "Default",
        "serviceAccountName": "konnectivity-agent",
        "serviceAccount": "konnectivity-agent",
        "nodeName": "mandible-prod-default-pool-grcwb",
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwb"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-cluster-critical",
        "priority": 2000000000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:05Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:22Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:05Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:04:05Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:22Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.244.1.35",
        "podIPs": [
          {
            "ip": "10.244.1.35"
          }
        ],
        "startTime": "2024-11-16T00:03:22Z",
        "containerStatuses": [
          {
            "name": "konnectivity-agent",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:04:04Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "registry.k8s.io/kas-network-proxy/proxy-agent:v0.30.2",
            "imageID": "registry.k8s.io/kas-network-proxy/proxy-agent@sha256:9a44a615d53d20d1ea5dbf407a65146e2a5263dd039b48e7f238b60ce063d3eb",
            "containerID": "containerd://8e6985b90e33eeed3746bd2e13fa57a73e4ea6e702472f574169e3051ccb1b8a",
            "started": true
          }
        ],
        "qosClass": "BestEffort"
      }
    },
    {
      "metadata": {
        "name": "kube-proxy-gkv4j",
        "generateName": "kube-proxy-",
        "namespace": "kube-system",
        "uid": "4fd41c5a-a6ab-4294-a134-9a716fb841a8",
        "resourceVersion": "28981417",
        "creationTimestamp": "2024-11-16T00:03:22Z",
        "labels": {
          "controller-revision-hash": "787d4cfd7f",
          "doks.digitalocean.com/managed": "true",
          "k8s-app": "kube-proxy",
          "pod-template-generation": "3",
          "tier": "node"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "privileged-containers,non-root-user,resource-requirements,hostpath-volume"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "kube-proxy",
            "uid": "c708d19e-3ad0-42a4-8009-9f2d82f697b9",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:22Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:k8s-app": {},
                  "f:pod-template-generation": {},
                  "f:tier": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"c708d19e-3ad0-42a4-8009-9f2d82f697b9\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"kube-proxy\"}": {
                    ".": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:privileged": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/kubernetes\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/etc/kubernetes/config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostNetwork": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"kube-proxy-config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"kube-proxy-kubeconfig\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:secretName": {}
                    }
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:37Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.116.0.9\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-proxy-kubeconfig",
            "secret": {
              "secretName": "kube-proxy",
              "defaultMode": 420
            }
          },
          {
            "name": "kube-proxy-config",
            "configMap": {
              "name": "kube-proxy",
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-4zshw",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "kube-proxy",
            "image": "registry.k8s.io/kube-proxy:v1.30.5",
            "command": [
              "kube-proxy",
              "--config=/etc/kubernetes/config/kube-proxy-config.yaml"
            ],
            "resources": {
              "requests": {
                "memory": "125Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "kube-proxy-kubeconfig",
                "readOnly": true,
                "mountPath": "/etc/kubernetes"
              },
              {
                "name": "kube-proxy-config",
                "readOnly": true,
                "mountPath": "/etc/kubernetes/config"
              },
              {
                "name": "kube-api-access-4zshw",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "kube-proxy",
        "serviceAccount": "kube-proxy",
        "nodeName": "mandible-prod-default-pool-grcwb",
        "hostNetwork": true,
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwb"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:36Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:22Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:36Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:36Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:22Z"
          }
        ],
        "hostIP": "10.116.0.9",
        "hostIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "podIP": "10.116.0.9",
        "podIPs": [
          {
            "ip": "10.116.0.9"
          }
        ],
        "startTime": "2024-11-16T00:03:22Z",
        "containerStatuses": [
          {
            "name": "kube-proxy",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:35Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "registry.k8s.io/kube-proxy:v1.30.5",
            "imageID": "registry.k8s.io/kube-proxy@sha256:fa20f91153b9e521ed2195d760af6ebf97fd8f5ee54e2164b7e6da6d0651fd13",
            "containerID": "containerd://d07845ac7dfb192ea7f3ae4c27765cc4200a082d1a78bdf43cf36ddcf9a475fe",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    },
    {
      "metadata": {
        "name": "kube-proxy-z42n9",
        "generateName": "kube-proxy-",
        "namespace": "kube-system",
        "uid": "b24ae2e7-01cd-45ab-aac2-de6c7df2917d",
        "resourceVersion": "28981323",
        "creationTimestamp": "2024-11-16T00:03:14Z",
        "labels": {
          "controller-revision-hash": "787d4cfd7f",
          "doks.digitalocean.com/managed": "true",
          "k8s-app": "kube-proxy",
          "pod-template-generation": "3",
          "tier": "node"
        },
        "annotations": {
          "clusterlint.digitalocean.com/disabled-checks": "privileged-containers,non-root-user,resource-requirements,hostpath-volume"
        },
        "ownerReferences": [
          {
            "apiVersion": "apps/v1",
            "kind": "DaemonSet",
            "name": "kube-proxy",
            "uid": "c708d19e-3ad0-42a4-8009-9f2d82f697b9",
            "controller": true,
            "blockOwnerDeletion": true
          }
        ],
        "managedFields": [
          {
            "manager": "kube-controller-manager",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:14Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:metadata": {
                "f:annotations": {
                  ".": {},
                  "f:clusterlint.digitalocean.com/disabled-checks": {}
                },
                "f:generateName": {},
                "f:labels": {
                  ".": {},
                  "f:controller-revision-hash": {},
                  "f:doks.digitalocean.com/managed": {},
                  "f:k8s-app": {},
                  "f:pod-template-generation": {},
                  "f:tier": {}
                },
                "f:ownerReferences": {
                  ".": {},
                  "k:{\"uid\":\"c708d19e-3ad0-42a4-8009-9f2d82f697b9\"}": {}
                }
              },
              "f:spec": {
                "f:affinity": {
                  ".": {},
                  "f:nodeAffinity": {
                    ".": {},
                    "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                  }
                },
                "f:containers": {
                  "k:{\"name\":\"kube-proxy\"}": {
                    ".": {},
                    "f:command": {},
                    "f:image": {},
                    "f:imagePullPolicy": {},
                    "f:name": {},
                    "f:resources": {
                      ".": {},
                      "f:requests": {
                        ".": {},
                        "f:memory": {}
                      }
                    },
                    "f:securityContext": {
                      ".": {},
                      "f:privileged": {}
                    },
                    "f:terminationMessagePath": {},
                    "f:terminationMessagePolicy": {},
                    "f:volumeMounts": {
                      ".": {},
                      "k:{\"mountPath\":\"/etc/kubernetes\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      },
                      "k:{\"mountPath\":\"/etc/kubernetes/config\"}": {
                        ".": {},
                        "f:mountPath": {},
                        "f:name": {},
                        "f:readOnly": {}
                      }
                    }
                  }
                },
                "f:dnsPolicy": {},
                "f:enableServiceLinks": {},
                "f:hostNetwork": {},
                "f:priorityClassName": {},
                "f:restartPolicy": {},
                "f:schedulerName": {},
                "f:securityContext": {},
                "f:serviceAccount": {},
                "f:serviceAccountName": {},
                "f:terminationGracePeriodSeconds": {},
                "f:tolerations": {},
                "f:volumes": {
                  ".": {},
                  "k:{\"name\":\"kube-proxy-config\"}": {
                    ".": {},
                    "f:configMap": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:name": {}
                    },
                    "f:name": {}
                  },
                  "k:{\"name\":\"kube-proxy-kubeconfig\"}": {
                    ".": {},
                    "f:name": {},
                    "f:secret": {
                      ".": {},
                      "f:defaultMode": {},
                      "f:secretName": {}
                    }
                  }
                }
              }
            }
          },
          {
            "manager": "kubelet",
            "operation": "Update",
            "apiVersion": "v1",
            "time": "2024-11-16T00:03:26Z",
            "fieldsType": "FieldsV1",
            "fieldsV1": {
              "f:status": {
                "f:conditions": {
                  "k:{\"type\":\"ContainersReady\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Initialized\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"PodReadyToStartContainers\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  },
                  "k:{\"type\":\"Ready\"}": {
                    ".": {},
                    "f:lastProbeTime": {},
                    "f:lastTransitionTime": {},
                    "f:status": {},
                    "f:type": {}
                  }
                },
                "f:containerStatuses": {},
                "f:hostIP": {},
                "f:hostIPs": {},
                "f:phase": {},
                "f:podIP": {},
                "f:podIPs": {
                  ".": {},
                  "k:{\"ip\":\"10.116.0.8\"}": {
                    ".": {},
                    "f:ip": {}
                  }
                },
                "f:startTime": {}
              }
            },
            "subresource": "status"
          }
        ]
      },
      "spec": {
        "volumes": [
          {
            "name": "kube-proxy-kubeconfig",
            "secret": {
              "secretName": "kube-proxy",
              "defaultMode": 420
            }
          },
          {
            "name": "kube-proxy-config",
            "configMap": {
              "name": "kube-proxy",
              "defaultMode": 420
            }
          },
          {
            "name": "kube-api-access-vjjcj",
            "projected": {
              "sources": [
                {
                  "serviceAccountToken": {
                    "expirationSeconds": 3607,
                    "path": "token"
                  }
                },
                {
                  "configMap": {
                    "name": "kube-root-ca.crt",
                    "items": [
                      {
                        "key": "ca.crt",
                        "path": "ca.crt"
                      }
                    ]
                  }
                },
                {
                  "downwardAPI": {
                    "items": [
                      {
                        "path": "namespace",
                        "fieldRef": {
                          "apiVersion": "v1",
                          "fieldPath": "metadata.namespace"
                        }
                      }
                    ]
                  }
                }
              ],
              "defaultMode": 420
            }
          }
        ],
        "containers": [
          {
            "name": "kube-proxy",
            "image": "registry.k8s.io/kube-proxy:v1.30.5",
            "command": [
              "kube-proxy",
              "--config=/etc/kubernetes/config/kube-proxy-config.yaml"
            ],
            "resources": {
              "requests": {
                "memory": "125Mi"
              }
            },
            "volumeMounts": [
              {
                "name": "kube-proxy-kubeconfig",
                "readOnly": true,
                "mountPath": "/etc/kubernetes"
              },
              {
                "name": "kube-proxy-config",
                "readOnly": true,
                "mountPath": "/etc/kubernetes/config"
              },
              {
                "name": "kube-api-access-vjjcj",
                "readOnly": true,
                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
              }
            ],
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "IfNotPresent",
            "securityContext": {
              "privileged": true
            }
          }
        ],
        "restartPolicy": "Always",
        "terminationGracePeriodSeconds": 30,
        "dnsPolicy": "ClusterFirst",
        "serviceAccountName": "kube-proxy",
        "serviceAccount": "kube-proxy",
        "nodeName": "mandible-prod-default-pool-grcwr",
        "hostNetwork": true,
        "securityContext": {},
        "affinity": {
          "nodeAffinity": {
            "requiredDuringSchedulingIgnoredDuringExecution": {
              "nodeSelectorTerms": [
                {
                  "matchFields": [
                    {
                      "key": "metadata.name",
                      "operator": "In",
                      "values": [
                        "mandible-prod-default-pool-grcwr"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        },
        "schedulerName": "default-scheduler",
        "tolerations": [
          {
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "CriticalAddonsOnly",
            "operator": "Exists"
          },
          {
            "key": "node.kubernetes.io/not-ready",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/unreachable",
            "operator": "Exists",
            "effect": "NoExecute"
          },
          {
            "key": "node.kubernetes.io/disk-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/memory-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/pid-pressure",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/unschedulable",
            "operator": "Exists",
            "effect": "NoSchedule"
          },
          {
            "key": "node.kubernetes.io/network-unavailable",
            "operator": "Exists",
            "effect": "NoSchedule"
          }
        ],
        "priorityClassName": "system-node-critical",
        "priority": 2000001000,
        "enableServiceLinks": true,
        "preemptionPolicy": "PreemptLowerPriority"
      },
      "status": {
        "phase": "Running",
        "conditions": [
          {
            "type": "PodReadyToStartContainers",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:25Z"
          },
          {
            "type": "Initialized",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:14Z"
          },
          {
            "type": "Ready",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:25Z"
          },
          {
            "type": "ContainersReady",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:25Z"
          },
          {
            "type": "PodScheduled",
            "status": "True",
            "lastProbeTime": null,
            "lastTransitionTime": "2024-11-16T00:03:14Z"
          }
        ],
        "hostIP": "10.116.0.8",
        "hostIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "podIP": "10.116.0.8",
        "podIPs": [
          {
            "ip": "10.116.0.8"
          }
        ],
        "startTime": "2024-11-16T00:03:14Z",
        "containerStatuses": [
          {
            "name": "kube-proxy",
            "state": {
              "running": {
                "startedAt": "2024-11-16T00:03:24Z"
              }
            },
            "lastState": {},
            "ready": true,
            "restartCount": 0,
            "image": "registry.k8s.io/kube-proxy:v1.30.5",
            "imageID": "registry.k8s.io/kube-proxy@sha256:fa20f91153b9e521ed2195d760af6ebf97fd8f5ee54e2164b7e6da6d0651fd13",
            "containerID": "containerd://fd7b4c9ddd73b521de9827802cd29f4cb1e4b3d3326fc34c511883310cc03906",
            "started": true
          }
        ],
        "qosClass": "Burstable"
      }
    }
  ]
}
